# build container no terminal WINDOWS CMD OU POWERSHELL

docker build -t sic-homolog-${BUILD_NUMBER} `
--build-arg APPNAME=sic `
--build-arg AMBIENTE=homolog `
--build-arg DB_NAME=sic `
--build-arg DB_USER=postgres `
--build-arg DB_PASS=postgres `
--build-arg DB_HOST=192.168.0.114 `
--build-arg PORTAL_DB_USER=postgres `
--build-arg PORTAL_DB_PASS=postgres `
--build-arg PORTAL_DB_HOST=192.168.0.114 .

# build container no terminal LINUX SHELL

docker build -t sic-homolog-${BUILD_NUMBER} \
--build-arg APPNAME=sic \
--build-arg AMBIENTE=homolog \
--build-arg DB_NAME=sic \
--build-arg DB_USER=postgres \
--build-arg DB_PASS=postgres \
--build-arg DB_HOST=192.168.0.114 \
--build-arg PORTAL_DB_USER=postgres \
--build-arg PORTAL_DB_PASS=postgres \
--build-arg PORTAL_DB_HOST=192.168.0.114 .

# Iniciar ou Debugar o container em caso de erros - alterar para o hash ou nome da imagem

docker container run --rm -it -p 3000:3000 `
-v C:\Testes_kubernetes\template_central\:/home/AppData/template_central `
--name=debug docker-registry.defensoria.ce.def.br/sic-homolog-8 /bin/bash -l ./run.sh

# Criar TAG da imagem e enviar PUSH para reposit√≥rio privado
docker tag sic-homolog-${BUILD_NUMBER} docker-registry.defensoria.ce.def.br/sic-homolog-${BUILD_NUMBER}
docker push docker-registry.defensoria.ce.def.br/sic-homolog-${BUILD_NUMBER}

# Apagar containers:

    docker stop sic-homolog ; docker rm sic-homolog 

    containers parados:
    docker rm @(docker ps -aq)

    todas as imagems:
    docker rmi @(docker images -aq)