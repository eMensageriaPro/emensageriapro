# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('mensageiro', '0001_initial'),
        ('controle_de_acesso', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='s1000evtInfoEmpregador',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1000evtinfoempregador_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1000evtinfoempregador_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1000evtinfoempregador_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1000evtinfoempregador_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1000_evtinfoempregador',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1005evtTabEstab',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1005evttabestab_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1005evttabestab_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1005evttabestab_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1005evttabestab_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1005_evttabestab',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1010evtTabRubrica',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1010evttabrubrica_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1010evttabrubrica_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1010evttabrubrica_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1010evttabrubrica_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1010_evttabrubrica',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1020evtTabLotacao',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1020evttablotacao_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1020evttablotacao_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1020evttablotacao_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1020evttablotacao_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1020_evttablotacao',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1030evtTabCargo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1030evttabcargo_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1030evttabcargo_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1030evttabcargo_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1030evttabcargo_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1030_evttabcargo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1035evtTabCarreira',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1035evttabcarreira_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1035evttabcarreira_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1035evttabcarreira_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1035evttabcarreira_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1035_evttabcarreira',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1040evtTabFuncao',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1040evttabfuncao_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1040evttabfuncao_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1040evttabfuncao_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1040evttabfuncao_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1040_evttabfuncao',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1050evtTabHorTur',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1050evttabhortur_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1050evttabhortur_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1050evttabhortur_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1050evttabhortur_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1050_evttabhortur',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1060evtTabAmbiente',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1060evttabambiente_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1060evttabambiente_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1060evttabambiente_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1060evttabambiente_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1060_evttabambiente',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1070evtTabProcesso',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1070evttabprocesso_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1070evttabprocesso_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1070evttabprocesso_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1070evttabprocesso_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1070_evttabprocesso',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1080evtTabOperPort',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s1080evttaboperport_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1080evttaboperport_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1080evttaboperport_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1080evttaboperport_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1080_evttaboperport',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1200evtRemun',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1200evtremun_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1200evtremun_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1200evtremun_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1200evtremun_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab'],
                'db_table': 's1200_evtremun',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1202evtRmnRPPS',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('qtddepfp', models.IntegerField(null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1202evtrmnrpps_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1202evtrmnrpps_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1202evtrmnrpps_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1202evtrmnrpps_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'qtddepfp'],
                'db_table': 's1202_evtrmnrpps',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1207evtBenPrRP',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpfbenef', models.CharField(max_length=11)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1207evtbenprrp_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1207evtbenprrp_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1207evtbenprrp_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1207evtbenprrp_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpfbenef'],
                'db_table': 's1207_evtbenprrp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1210evtPgtos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpfbenef', models.CharField(max_length=11)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1210evtpgtos_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1210evtpgtos_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1210evtpgtos_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1210evtpgtos_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpfbenef'],
                'db_table': 's1210_evtpgtos',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1250evtAqProd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('tpinscadq', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinscadq', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1250evtaqprod_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1250evtaqprod_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1250evtaqprod_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1250evtaqprod_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'tpinscadq', 'nrinscadq'],
                'db_table': 's1250_evtaqprod',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1260evtComProd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('nrinscestabrural', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1260evtcomprod_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1260evtcomprod_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1260evtcomprod_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1260evtcomprod_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'nrinscestabrural'],
                'db_table': 's1260_evtcomprod',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1270evtContratAvNP',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1270evtcontratavnp_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1270evtcontratavnp_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1270evtcontratavnp_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1270evtcontratavnp_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1270_evtcontratavnp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1280evtInfoComplPer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1280evtinfocomplper_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1280evtinfocomplper_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1280evtinfocomplper_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1280evtinfocomplper_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1280_evtinfocomplper',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1295evtTotConting',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1295evttotconting_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1295evttotconting_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1295evttotconting_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1295evttotconting_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1295_evttotconting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1298evtReabreEvPer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1298evtreabreevper_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1298evtreabreevper_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1298evtreabreevper_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1298evtreabreevper_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1298_evtreabreevper',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1299evtFechaEvPer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('evtremun', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('evtpgtos', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('evtaqprod', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('evtcomprod', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('evtcontratavnp', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('evtinfocomplper', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('compsemmovto', models.CharField(max_length=7, null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1299evtfechaevper_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1299evtfechaevper_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1299evtfechaevper_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1299evtfechaevper_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'evtremun', 'evtpgtos', 'evtaqprod', 'evtcomprod', 'evtcontratavnp', 'evtinfocomplper', 'compsemmovto'],
                'db_table': 's1299_evtfechaevper',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s1300evtContrSindPatr',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s1300evtcontrsindpatr_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s1300evtcontrsindpatr_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s1300evtcontrsindpatr_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s1300evtcontrsindpatr_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'indapuracao', 'perapur', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc'],
                'db_table': 's1300_evtcontrsindpatr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2190evtAdmPrelim',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('dtnascto', models.DateField()),
                ('dtadm', models.DateField()),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2190evtadmprelim_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2190evtadmprelim_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2190evtadmprelim_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2190evtadmprelim_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'dtnascto', 'dtadm'],
                'db_table': 's2190_evtadmprelim',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2200evtAdmissao',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (1, '1 - CNPJ'), (1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (2, '2 - CPF'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11)),
                ('nmtrab', models.CharField(max_length=70)),
                ('sexo', models.CharField(max_length=1, choices=[(b'F', 'F - Feminino'), (b'M', 'M - Masculino')])),
                ('racacor', models.IntegerField(choices=[(1, '1 - Branca'), (2, '2 - Negra'), (3, '3 - Parda (parda ou declarada como mulata, cabocla, cafuza, mameluca ou mesti\xe7a de negro com pessoa de outra cor ou ra\xe7a)'), (4, '4 - Amarela (de origem japonesa, chinesa, coreana etc)'), (5, '5 - Ind\xedgena'), (6, '6 - N\xe3o informado')])),
                ('estciv', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Solteiro'), (2, '2 - Casado'), (3, '3 - Divorciado'), (4, '4 - Separado'), (5, '5 - Vi\xfavo')])),
                ('grauinstr', models.CharField(max_length=2, choices=[(b'01', '01 - Analfabeto, inclusive o que, embora tenha recebido instru\xe7\xe3o, n\xe3o se alfabetizou'), (b'02', '02 - At\xe9 o 5\xba ano incompleto do Ensino Fundamental (antiga 4\xaa s\xe9rie) ou que se tenha alfabetizado sem ter frequentado escola regular'), (b'03', '03 - 5\xba ano completo do Ensino Fundamental'), (b'04', '04 - Do 6\xba ao 9\xba ano do Ensino Fundamental incompleto (antiga 5\xaa a 8\xaa s\xe9rie)'), (b'05', '05 - Ensino Fundamental Completo'), (b'06', '06 - Ensino M\xe9dio incompleto'), (b'07', '07 - Ensino M\xe9dio completo'), (b'08', '08 - Educa\xe7\xe3o Superior incompleta'), (b'09', '09 - Educa\xe7\xe3o Superior completa'), (b'10', '10 - P\xf3s-Gradua\xe7\xe3o completa'), (b'11', '11 - Mestrado completo'), (b'12', '12 - Doutorado completo')])),
                ('indpriempr', models.CharField(blank=True, max_length=1, null=True, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('nmsoc', models.CharField(max_length=70, null=True, blank=True)),
                ('dtnascto', models.DateField()),
                ('codmunic', models.TextField(max_length=7, null=True, blank=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True, choices=[(b'AC', 'Acre'), (b'AL', 'Alagoas'), (b'AM', 'Amazonas'), (b'AP', 'Amap\xe1'), (b'BA', 'Bahia'), (b'CE', 'Cear\xe1'), (b'DF', 'Distrito Federal'), (b'ES', 'Esp\xedrito Santo'), (b'GO', 'Goi\xe1s'), (b'MA', 'Maranh\xe3o'), (b'MG', 'Minas Gerais'), (b'MS', 'Mato Grosso do Sul'), (b'MT', 'Mato Grosso'), (b'PA', 'Par\xe1'), (b'PB', 'Para\xedba'), (b'PE', 'Pernambuco'), (b'PI', 'Piau\xed'), (b'PR', 'Paran\xe1'), (b'RJ', 'Rio de Janeiro'), (b'RN', 'Rio Grande do Norte'), (b'RO', 'Rond\xf4nia'), (b'RR', 'Roraima'), (b'RS', 'Rio Grande do Sul'), (b'SC', 'Santa Catarina'), (b'SE', 'Sergipe'), (b'SP', 'S\xe3o Paulo'), (b'TO', 'Tocantins')])),
                ('paisnascto', models.CharField(max_length=3, choices=[(b'008', '008 - Abu Dhabi'), (b'009', '009 - Dirce'), (b'013', '013 - Afeganistao'), (b'017', '017 - Albania, Republica Da'), (b'020', '020 - Alboran-Perejil,Ilhas'), (b'023', '023 - Alemanha'), (b'025', '025 - Alemanha, Republica Democratica'), (b'031', '031 - Burkina Faso'), (b'037', '037 - Andorra'), (b'040', '040 - Angola'), (b'041', '041 - Anguilla'), (b'043', '043 - Antigua E Barbuda'), (b'047', '047 - Antilhas Holandesas'), (b'053', '053 - Arabia Saudita'), (b'059', '059 - Argelia'), (b'063', '063 - Argentina'), (b'064', '064 - Armenia, Republica Da'), (b'065', '065 - Aruba'), (b'069', '069 - Australia'), (b'072', '072 - Austria'), (b'073', '073 - Azerbaijao, Republica Do'), (b'077', '077 - Bahamas, Ilhas'), (b'080', '080 - Bahrein, Ilhas'), (b'081', '081 - Bangladesh'), (b'083', '083 - Barbados'), (b'085', '085 - Belarus, Republica Da'), (b'087', '087 - Belgica'), (b'088', '088 - Belize'), (b'090', '090 - Bermudas'), (b'093', '093 - Mianmar (BIRMANIA)'), (b'097', '097 - Bolivia, Estado Plurinacional Da'), (b'098', '098 - Bosnia-Herzegovina (REPUBLICA Da)'), (b'100', '100 - Int.Z.F.Manaus'), (b'101', '101 - Botsuana'), (b'105', '105 - Brasil'), (b'106', '106 - Fretado P/Brasil'), (b'108', '108 - Brunei'), (b'111', '111 - Bulgaria, Republica Da'), (b'115', '115 - Burundi'), (b'119', '119 - Butao'), (b'127', '127 - Cabo Verde, Republica De'), (b'131', '131 - Cachemira'), (b'137', '137 - Cayman, Ilhas'), (b'141', '141 - Camboja'), (b'145', '145 - Camaroes'), (b'149', '149 - Canada'), (b'150', '150 - Jersey, Ilha Do Canal'), (b'151', '151 - Canarias, Ilhas'), (b'152', '152 - Canal,Ilhas'), (b'153', '153 - Cazaquistao, Republica Do'), (b'154', '154 - Catar'), (b'158', '158 - Chile'), (b'160', '160 - China, Republica Popular'), (b'161', '161 - Formosa (TAIWAN)'), (b'163', '163 - Chipre'), (b'165', '165 - Cocos(Keeling),Ilhas'), (b'169', '169 - Colombia'), (b'173', '173 - Comores, Ilhas'), (b'177', '177 - Congo'), (b'183', '183 - Cook, Ilhas'), (b'187', '187 - Coreia (DO Norte), Rep.Pop.Democratica'), (b'190', '190 - Coreia (DO Sul), Republica Da'), (b'193', '193 - Costa Do Marfim'), (b'195', '195 - Croacia (REPUBLICA Da)'), (b'196', '196 - Costa Rica'), (b'198', '198 - Coveite'), (b'199', '199 - Cuba'), (b'229', '229 - Benin'), (b'232', '232 - Dinamarca'), (b'235', '235 - Dominica,Ilha'), (b'237', '237 - Dubai'), (b'239', '239 - Equador'), (b'240', '240 - Egito'), (b'243', '243 - Eritreia'), (b'244', '244 - Emirados Arabes Unidos'), (b'245', '245 - Espanha'), (b'246', '246 - Eslovenia, Republica Da'), (b'247', '247 - Eslovaca, Republica'), (b'249', '249 - Estados Unidos'), (b'251', '251 - Estonia, Republica Da'), (b'253', '253 - Etiopia'), (b'255', '255 - Falkland (ILHAS Malvinas)'), (b'259', '259 - Feroe, Ilhas'), (b'263', '263 - Fezzan'), (b'267', '267 - Filipinas'), (b'271', '271 - Finlandia'), (b'275', '275 - Franca'), (b'281', '281 - Gabao'), (b'285', '285 - Gambia'), (b'289', '289 - Gana'), (b'291', '291 - Georgia, Republica Da'), (b'293', '293 - Gibraltar'), (b'297', '297 - Granada'), (b'301', '301 - Grecia'), (b'305', '305 - Groenlandia'), (b'309', '309 - Guadalupe'), (b'313', '313 - Guam'), (b'317', '317 - Guatemala'), (b'325', '325 - Guiana Francesa'), (b'329', '329 - Guine'), (b'331', '331 - Guine-Equatorial'), (b'334', '334 - Guine-Bissau'), (b'337', '337 - Guiana'), (b'341', '341 - Haiti'), (b'345', '345 - Honduras'), (b'351', '351 - Hong Kong'), (b'355', '355 - Hungria, Republica Da'), (b'357', '357 - Iemen'), (b'358', '358 - Iemem Do Sul'), (b'359', '359 - Man, Ilha De'), (b'361', '361 - India'), (b'365', '365 - Indonesia'), (b'367', '367 - Inglaterra'), (b'369', '369 - Iraque'), (b'372', '372 - Ira, Republica Islamica Do'), (b'375', '375 - Irlanda'), (b'379', '379 - Islandia'), (b'383', '383 - Israel'), (b'386', '386 - Italia'), (b'388', '388 - Servia E Montenegro'), (b'391', '391 - Jamaica'), (b'395', '395 - Jammu'), (b'396', '396 - Johnston, Ilhas'), (b'399', '399 - Japao'), (b'403', '403 - Jordania'), (b'411', '411 - Kiribati'), (b'420', '420 - Laos, Rep.Pop.Democr.Do'), (b'423', '423 - Lebuan,Ilhas'), (b'426', '426 - Lesoto'), (b'427', '427 - Letonia, Republica Da'), (b'431', '431 - Libano'), (b'434', '434 - Liberia'), (b'438', '438 - Libia'), (b'440', '440 - Liechtenstein'), (b'442', '442 - Lituania, Republica Da'), (b'445', '445 - Luxemburgo'), (b'447', '447 - Macau'), (b'449', '449 - Macedonia, Ant.Rep.Iugoslava'), (b'450', '450 - Madagascar'), (b'452', '452 - Ilha Da Madeira'), (b'455', '455 - Malasia'), (b'458', '458 - Malavi'), (b'461', '461 - Maldivas'), (b'464', '464 - Mali'), (b'467', '467 - Malta'), (b'472', '472 - Marianas Do Norte'), (b'474', '474 - Marrocos'), (b'476', '476 - Marshall,Ilhas'), (b'477', '477 - Martinica'), (b'485', '485 - Mauricio'), (b'488', '488 - Mauritania'), (b'490', '490 - Midway, Ilhas'), (b'493', '493 - Mexico'), (b'494', '494 - Moldavia, Republica Da'), (b'495', '495 - Monaco'), (b'497', '497 - Mongolia'), (b'499', '499 - Micronesia'), (b'501', '501 - Montserrat,Ilhas'), (b'505', '505 - Mocambique'), (b'507', '507 - Namibia'), (b'508', '508 - Nauru'), (b'511', '511 - Christmas,Ilha (NAVIDAD)'), (b'517', '517 - Nepal'), (b'521', '521 - Nicaragua'), (b'525', '525 - Niger'), (b'528', '528 - Nigeria'), (b'531', '531 - Niue,Ilha'), (b'535', '535 - Norfolk,Ilha'), (b'538', '538 - Noruega'), (b'542', '542 - Nova Caledonia'), (b'545', '545 - Papua Nova Guine'), (b'548', '548 - Nova Zelandia'), (b'551', '551 - Vanuatu'), (b'556', '556 - Oma'), (b'563', '563 - Pacifico,Ilhas Do (ADMINISTRACAO Dos Eua)'), (b'566', '566 - Pacifico,Ilhas Do (POSSESSAO Dos Eua)'), (b'569', '569 - Pacifico,Ilhas Do (TERRITORIO Em Fideicomisso Dos'), (b'573', '573 - Paises Baixos (HOLANDA)'), (b'575', '575 - Palau'), (b'576', '576 - Paquistao'), (b'578', '578 - Palestina'), (b'580', '580 - Panama'), (b'583', '583 - Papua Nova Guin\xe9'), (b'586', '586 - Paraguai'), (b'589', '589 - Peru'), (b'593', '593 - Pitcairn,Ilha'), (b'599', '599 - Polinesia Francesa'), (b'603', '603 - Polonia, Republica Da'), (b'607', '607 - Portugal'), (b'611', '611 - Porto Rico'), (b'623', '623 - Quenia'), (b'625', '625 - Quirguiz, Republica'), (b'628', '628 - Reino Unido'), (b'640', '640 - Republica Centro-Africana'), (b'647', '647 - Republica Dominicana'), (b'660', '660 - Reuniao, Ilha'), (b'665', '665 - Zimbabue'), (b'670', '670 - Romenia'), (b'675', '675 - Ruanda'), (b'676', '676 - Russia, Federacao Da'), (b'677', '677 - Salomao, Ilhas'), (b'678', '678 - Saint Kitts E Nevis'), (b'685', '685 - Saara Ocidental'), (b'687', '687 - El Salvador'), (b'690', '690 - Samoa'), (b'691', '691 - Samoa Americana'), (b'695', '695 - Sao Cristovao E Neves,Ilhas'), (b'697', '697 - San Marino'), (b'700', '700 - Sao Pedro E Miquelon'), (b'705', '705 - Sao Vicente E Granadinas'), (b'710', '710 - Santa Helena'), (b'715', '715 - Santa Lucia'), (b'720', '720 - Sao Tome E Principe, Ilhas'), (b'728', '728 - Senegal'), (b'731', '731 - Seychelles'), (b'735', '735 - Serra Leoa'), (b'738', '738 - Sikkim'), (b'741', '741 - Cingapura'), (b'744', '744 - Siria, Republica Arabe Da'), (b'748', '748 - Somalia'), (b'750', '750 - Sri Lanka'), (b'754', '754 - Suazilandia'), (b'756', '756 - Africa Do Sul'), (b'759', '759 - Sudao'), (b'764', '764 - Suecia'), (b'767', '767 - Suica'), (b'770', '770 - Suriname'), (b'772', '772 - Tadjiquistao, Republica Do'), (b'776', '776 - Tailandia'), (b'780', '780 - Tanzania, Rep.Unida Da'), (b'782', '782 - Territorio Brit.Oc.Indico'), (b'783', '783 - Djibuti'), (b'785', '785 - Territorio da Alta Comissao do Pacifico Ocidental'), (b'788', '788 - Chade'), (b'790', '790 - Tchecoslovaquia'), (b'791', '791 - Tcheca, Republica'), (b'795', '795 - Timor Leste'), (b'800', '800 - Togo'), (b'805', '805 - Toquelau,Ilhas'), (b'810', '810 - Tonga'), (b'815', '815 - Trinidad E Tobago'), (b'820', '820 - Tunisia'), (b'823', '823 - Turcas E Caicos,Ilhas'), (b'824', '824 - Turcomenistao, Republica Do'), (b'827', '827 - Turquia'), (b'828', '828 - Tuvalu'), (b'831', '831 - Ucrania'), (b'833', '833 - Uganda'), (b'840', '840 - Uniao Das Republicas Socialistas Sovieticas'), (b'845', '845 - Uruguai'), (b'847', '847 - Uzbequistao, Republica Do'), (b'848', '848 - Vaticano, Est.Da Cidade Do'), (b'850', '850 - Venezuela'), (b'855', '855 - Vietname Norte'), (b'858', '858 - Vietna'), (b'863', '863 - Virgens,Ilhas (BRITANICAS)'), (b'866', '866 - Virgens,Ilhas (E.U.A.)'), (b'870', '870 - Fiji'), (b'873', '873 - Wake, Ilha'), (b'875', '875 - Wallis E Futuna, Ilhas'), (b'888', '888 - Congo, Republica Democratica Do'), (b'890', '890 - Zambia')])),
                ('paisnac', models.CharField(max_length=3, choices=[(b'008', '008 - Abu Dhabi'), (b'009', '009 - Dirce'), (b'013', '013 - Afeganistao'), (b'017', '017 - Albania, Republica Da'), (b'020', '020 - Alboran-Perejil,Ilhas'), (b'023', '023 - Alemanha'), (b'025', '025 - Alemanha, Republica Democratica'), (b'031', '031 - Burkina Faso'), (b'037', '037 - Andorra'), (b'040', '040 - Angola'), (b'041', '041 - Anguilla'), (b'043', '043 - Antigua E Barbuda'), (b'047', '047 - Antilhas Holandesas'), (b'053', '053 - Arabia Saudita'), (b'059', '059 - Argelia'), (b'063', '063 - Argentina'), (b'064', '064 - Armenia, Republica Da'), (b'065', '065 - Aruba'), (b'069', '069 - Australia'), (b'072', '072 - Austria'), (b'073', '073 - Azerbaijao, Republica Do'), (b'077', '077 - Bahamas, Ilhas'), (b'080', '080 - Bahrein, Ilhas'), (b'081', '081 - Bangladesh'), (b'083', '083 - Barbados'), (b'085', '085 - Belarus, Republica Da'), (b'087', '087 - Belgica'), (b'088', '088 - Belize'), (b'090', '090 - Bermudas'), (b'093', '093 - Mianmar (BIRMANIA)'), (b'097', '097 - Bolivia, Estado Plurinacional Da'), (b'098', '098 - Bosnia-Herzegovina (REPUBLICA Da)'), (b'100', '100 - Int.Z.F.Manaus'), (b'101', '101 - Botsuana'), (b'105', '105 - Brasil'), (b'106', '106 - Fretado P/Brasil'), (b'108', '108 - Brunei'), (b'111', '111 - Bulgaria, Republica Da'), (b'115', '115 - Burundi'), (b'119', '119 - Butao'), (b'127', '127 - Cabo Verde, Republica De'), (b'131', '131 - Cachemira'), (b'137', '137 - Cayman, Ilhas'), (b'141', '141 - Camboja'), (b'145', '145 - Camaroes'), (b'149', '149 - Canada'), (b'150', '150 - Jersey, Ilha Do Canal'), (b'151', '151 - Canarias, Ilhas'), (b'152', '152 - Canal,Ilhas'), (b'153', '153 - Cazaquistao, Republica Do'), (b'154', '154 - Catar'), (b'158', '158 - Chile'), (b'160', '160 - China, Republica Popular'), (b'161', '161 - Formosa (TAIWAN)'), (b'163', '163 - Chipre'), (b'165', '165 - Cocos(Keeling),Ilhas'), (b'169', '169 - Colombia'), (b'173', '173 - Comores, Ilhas'), (b'177', '177 - Congo'), (b'183', '183 - Cook, Ilhas'), (b'187', '187 - Coreia (DO Norte), Rep.Pop.Democratica'), (b'190', '190 - Coreia (DO Sul), Republica Da'), (b'193', '193 - Costa Do Marfim'), (b'195', '195 - Croacia (REPUBLICA Da)'), (b'196', '196 - Costa Rica'), (b'198', '198 - Coveite'), (b'199', '199 - Cuba'), (b'229', '229 - Benin'), (b'232', '232 - Dinamarca'), (b'235', '235 - Dominica,Ilha'), (b'237', '237 - Dubai'), (b'239', '239 - Equador'), (b'240', '240 - Egito'), (b'243', '243 - Eritreia'), (b'244', '244 - Emirados Arabes Unidos'), (b'245', '245 - Espanha'), (b'246', '246 - Eslovenia, Republica Da'), (b'247', '247 - Eslovaca, Republica'), (b'249', '249 - Estados Unidos'), (b'251', '251 - Estonia, Republica Da'), (b'253', '253 - Etiopia'), (b'255', '255 - Falkland (ILHAS Malvinas)'), (b'259', '259 - Feroe, Ilhas'), (b'263', '263 - Fezzan'), (b'267', '267 - Filipinas'), (b'271', '271 - Finlandia'), (b'275', '275 - Franca'), (b'281', '281 - Gabao'), (b'285', '285 - Gambia'), (b'289', '289 - Gana'), (b'291', '291 - Georgia, Republica Da'), (b'293', '293 - Gibraltar'), (b'297', '297 - Granada'), (b'301', '301 - Grecia'), (b'305', '305 - Groenlandia'), (b'309', '309 - Guadalupe'), (b'313', '313 - Guam'), (b'317', '317 - Guatemala'), (b'325', '325 - Guiana Francesa'), (b'329', '329 - Guine'), (b'331', '331 - Guine-Equatorial'), (b'334', '334 - Guine-Bissau'), (b'337', '337 - Guiana'), (b'341', '341 - Haiti'), (b'345', '345 - Honduras'), (b'351', '351 - Hong Kong'), (b'355', '355 - Hungria, Republica Da'), (b'357', '357 - Iemen'), (b'358', '358 - Iemem Do Sul'), (b'359', '359 - Man, Ilha De'), (b'361', '361 - India'), (b'365', '365 - Indonesia'), (b'367', '367 - Inglaterra'), (b'369', '369 - Iraque'), (b'372', '372 - Ira, Republica Islamica Do'), (b'375', '375 - Irlanda'), (b'379', '379 - Islandia'), (b'383', '383 - Israel'), (b'386', '386 - Italia'), (b'388', '388 - Servia E Montenegro'), (b'391', '391 - Jamaica'), (b'395', '395 - Jammu'), (b'396', '396 - Johnston, Ilhas'), (b'399', '399 - Japao'), (b'403', '403 - Jordania'), (b'411', '411 - Kiribati'), (b'420', '420 - Laos, Rep.Pop.Democr.Do'), (b'423', '423 - Lebuan,Ilhas'), (b'426', '426 - Lesoto'), (b'427', '427 - Letonia, Republica Da'), (b'431', '431 - Libano'), (b'434', '434 - Liberia'), (b'438', '438 - Libia'), (b'440', '440 - Liechtenstein'), (b'442', '442 - Lituania, Republica Da'), (b'445', '445 - Luxemburgo'), (b'447', '447 - Macau'), (b'449', '449 - Macedonia, Ant.Rep.Iugoslava'), (b'450', '450 - Madagascar'), (b'452', '452 - Ilha Da Madeira'), (b'455', '455 - Malasia'), (b'458', '458 - Malavi'), (b'461', '461 - Maldivas'), (b'464', '464 - Mali'), (b'467', '467 - Malta'), (b'472', '472 - Marianas Do Norte'), (b'474', '474 - Marrocos'), (b'476', '476 - Marshall,Ilhas'), (b'477', '477 - Martinica'), (b'485', '485 - Mauricio'), (b'488', '488 - Mauritania'), (b'490', '490 - Midway, Ilhas'), (b'493', '493 - Mexico'), (b'494', '494 - Moldavia, Republica Da'), (b'495', '495 - Monaco'), (b'497', '497 - Mongolia'), (b'499', '499 - Micronesia'), (b'501', '501 - Montserrat,Ilhas'), (b'505', '505 - Mocambique'), (b'507', '507 - Namibia'), (b'508', '508 - Nauru'), (b'511', '511 - Christmas,Ilha (NAVIDAD)'), (b'517', '517 - Nepal'), (b'521', '521 - Nicaragua'), (b'525', '525 - Niger'), (b'528', '528 - Nigeria'), (b'531', '531 - Niue,Ilha'), (b'535', '535 - Norfolk,Ilha'), (b'538', '538 - Noruega'), (b'542', '542 - Nova Caledonia'), (b'545', '545 - Papua Nova Guine'), (b'548', '548 - Nova Zelandia'), (b'551', '551 - Vanuatu'), (b'556', '556 - Oma'), (b'563', '563 - Pacifico,Ilhas Do (ADMINISTRACAO Dos Eua)'), (b'566', '566 - Pacifico,Ilhas Do (POSSESSAO Dos Eua)'), (b'569', '569 - Pacifico,Ilhas Do (TERRITORIO Em Fideicomisso Dos'), (b'573', '573 - Paises Baixos (HOLANDA)'), (b'575', '575 - Palau'), (b'576', '576 - Paquistao'), (b'578', '578 - Palestina'), (b'580', '580 - Panama'), (b'583', '583 - Papua Nova Guin\xe9'), (b'586', '586 - Paraguai'), (b'589', '589 - Peru'), (b'593', '593 - Pitcairn,Ilha'), (b'599', '599 - Polinesia Francesa'), (b'603', '603 - Polonia, Republica Da'), (b'607', '607 - Portugal'), (b'611', '611 - Porto Rico'), (b'623', '623 - Quenia'), (b'625', '625 - Quirguiz, Republica'), (b'628', '628 - Reino Unido'), (b'640', '640 - Republica Centro-Africana'), (b'647', '647 - Republica Dominicana'), (b'660', '660 - Reuniao, Ilha'), (b'665', '665 - Zimbabue'), (b'670', '670 - Romenia'), (b'675', '675 - Ruanda'), (b'676', '676 - Russia, Federacao Da'), (b'677', '677 - Salomao, Ilhas'), (b'678', '678 - Saint Kitts E Nevis'), (b'685', '685 - Saara Ocidental'), (b'687', '687 - El Salvador'), (b'690', '690 - Samoa'), (b'691', '691 - Samoa Americana'), (b'695', '695 - Sao Cristovao E Neves,Ilhas'), (b'697', '697 - San Marino'), (b'700', '700 - Sao Pedro E Miquelon'), (b'705', '705 - Sao Vicente E Granadinas'), (b'710', '710 - Santa Helena'), (b'715', '715 - Santa Lucia'), (b'720', '720 - Sao Tome E Principe, Ilhas'), (b'728', '728 - Senegal'), (b'731', '731 - Seychelles'), (b'735', '735 - Serra Leoa'), (b'738', '738 - Sikkim'), (b'741', '741 - Cingapura'), (b'744', '744 - Siria, Republica Arabe Da'), (b'748', '748 - Somalia'), (b'750', '750 - Sri Lanka'), (b'754', '754 - Suazilandia'), (b'756', '756 - Africa Do Sul'), (b'759', '759 - Sudao'), (b'764', '764 - Suecia'), (b'767', '767 - Suica'), (b'770', '770 - Suriname'), (b'772', '772 - Tadjiquistao, Republica Do'), (b'776', '776 - Tailandia'), (b'780', '780 - Tanzania, Rep.Unida Da'), (b'782', '782 - Territorio Brit.Oc.Indico'), (b'783', '783 - Djibuti'), (b'785', '785 - Territorio da Alta Comissao do Pacifico Ocidental'), (b'788', '788 - Chade'), (b'790', '790 - Tchecoslovaquia'), (b'791', '791 - Tcheca, Republica'), (b'795', '795 - Timor Leste'), (b'800', '800 - Togo'), (b'805', '805 - Toquelau,Ilhas'), (b'810', '810 - Tonga'), (b'815', '815 - Trinidad E Tobago'), (b'820', '820 - Tunisia'), (b'823', '823 - Turcas E Caicos,Ilhas'), (b'824', '824 - Turcomenistao, Republica Do'), (b'827', '827 - Turquia'), (b'828', '828 - Tuvalu'), (b'831', '831 - Ucrania'), (b'833', '833 - Uganda'), (b'840', '840 - Uniao Das Republicas Socialistas Sovieticas'), (b'845', '845 - Uruguai'), (b'847', '847 - Uzbequistao, Republica Do'), (b'848', '848 - Vaticano, Est.Da Cidade Do'), (b'850', '850 - Venezuela'), (b'855', '855 - Vietname Norte'), (b'858', '858 - Vietna'), (b'863', '863 - Virgens,Ilhas (BRITANICAS)'), (b'866', '866 - Virgens,Ilhas (E.U.A.)'), (b'870', '870 - Fiji'), (b'873', '873 - Wake, Ilha'), (b'875', '875 - Wallis E Futuna, Ilhas'), (b'888', '888 - Congo, Republica Democratica Do'), (b'890', '890 - Zambia')])),
                ('nmmae', models.CharField(max_length=70, null=True, blank=True)),
                ('nmpai', models.CharField(max_length=70, null=True, blank=True)),
                ('matricula', models.CharField(max_length=30)),
                ('tpregtrab', models.IntegerField(choices=[(1, '1 - CLT - Consolida\xe7\xe3o das Leis de Trabalho e legisla\xe7\xf5es trabalhistas espec\xedficas'), (2, '2 - Estatut\xe1rio')])),
                ('tpregprev', models.IntegerField(choices=[(1, '1 - Regime Geral da Previd\xeancia Social - RGPS'), (2, '2 - Regime Pr\xf3prio de Previd\xeancia Social - RPPS'), (3, '3 - Regime de Previd\xeancia Social no Exterior')])),
                ('nrrecinfprelim', models.CharField(max_length=40, null=True, blank=True)),
                ('cadini', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o (Admiss\xe3o)'), (b'S', 'S - Sim (Cadastramento Inicial)')])),
                ('codcargo', models.CharField(max_length=30, null=True, blank=True)),
                ('codfuncao', models.CharField(max_length=30, null=True, blank=True)),
                ('codcateg', models.IntegerField()),
                ('codcarreira', models.CharField(max_length=30, null=True, blank=True)),
                ('dtingrcarr', models.DateField(null=True, blank=True)),
                ('vrsalfx', models.DecimalField(max_length=14, max_digits=15, decimal_places=2)),
                ('undsalfixo', models.IntegerField(choices=[(1, '1 - Por Hora'), (2, '2 - Por Dia'), (3, '3 - Por Semana'), (4, '4 - Por Quinzena'), (5, '5 - Por M\xeas'), (6, '6 - Por Tarefa'), (7, '7 - N\xe3o aplic\xe1vel - sal\xe1rio exclusivamente vari\xe1vel')])),
                ('dscsalvar', models.CharField(max_length=255, null=True, blank=True)),
                ('tpcontr', models.IntegerField(choices=[(1, '1 - Prazo indeterminado'), (2, '2 - Prazo determinado')])),
                ('dtterm', models.DateField(null=True, blank=True)),
                ('clauassec', models.CharField(blank=True, max_length=1, null=True, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2200evtadmissao_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2200evtadmissao_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2200evtadmissao_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2200evtadmissao_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'nmtrab', 'sexo', 'racacor', 'estciv', 'grauinstr', 'indpriempr', 'nmsoc', 'dtnascto', 'codmunic', 'uf', 'paisnascto', 'paisnac', 'nmmae', 'nmpai', 'matricula', 'tpregtrab', 'tpregprev', 'nrrecinfprelim', 'cadini', 'codcargo', 'codfuncao', 'codcateg', 'codcarreira', 'dtingrcarr', 'vrsalfx', 'undsalfixo', 'dscsalvar', 'tpcontr', 'dtterm', 'clauassec'],
                'db_table': 's2200_evtadmissao',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2205evtAltCadastral',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('dtalteracao', models.DateField()),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('nmtrab', models.CharField(max_length=70)),
                ('sexo', models.CharField(max_length=1, choices=[(b'F', 'F - Feminino'), (b'M', 'M - Masculino')])),
                ('racacor', models.IntegerField(choices=[(1, '1 - Branca'), (2, '2 - Negra'), (3, '3 - Parda (parda ou declarada como mulata, cabocla, cafuza, mameluca ou mesti\xe7a de negro com pessoa de outra cor ou ra\xe7a)'), (4, '4 - Amarela (de origem japonesa, chinesa, coreana etc)'), (5, '5 - Ind\xedgena'), (6, '6 - N\xe3o informado')])),
                ('estciv', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Solteiro'), (2, '2 - Casado'), (3, '3 - Divorciado'), (4, '4 - Separado'), (5, '5 - Vi\xfavo')])),
                ('grauinstr', models.CharField(max_length=2, choices=[(b'01', '01 - Analfabeto, inclusive o que, embora tenha recebido instru\xe7\xe3o, n\xe3o se alfabetizou'), (b'02', '02 - At\xe9 o 5\xba ano incompleto do Ensino Fundamental (antiga 4\xaa s\xe9rie) ou que se tenha alfabetizado sem ter frequentado escola regular'), (b'03', '03 - 5\xba ano completo do Ensino Fundamental'), (b'04', '04 - Do 6\xba ao 9\xba ano do Ensino Fundamental incompleto (antiga 5\xaa a 8\xaa s\xe9rie)'), (b'05', '05 - Ensino Fundamental Completo'), (b'06', '06 - Ensino M\xe9dio incompleto'), (b'07', '07 - Ensino M\xe9dio completo'), (b'08', '08 - Educa\xe7\xe3o Superior incompleta'), (b'09', '09 - Educa\xe7\xe3o Superior completa'), (b'10', '10 - P\xf3s-Gradua\xe7\xe3o completa'), (b'11', '11 - Mestrado completo'), (b'12', '12 - Doutorado completo')])),
                ('nmsoc', models.CharField(max_length=70, null=True, blank=True)),
                ('dtnascto', models.DateField()),
                ('codmunic', models.TextField(max_length=7, null=True, blank=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True, choices=[(b'AC', 'Acre'), (b'AL', 'Alagoas'), (b'AM', 'Amazonas'), (b'AP', 'Amap\xe1'), (b'BA', 'Bahia'), (b'CE', 'Cear\xe1'), (b'DF', 'Distrito Federal'), (b'ES', 'Esp\xedrito Santo'), (b'GO', 'Goi\xe1s'), (b'MA', 'Maranh\xe3o'), (b'MG', 'Minas Gerais'), (b'MS', 'Mato Grosso do Sul'), (b'MT', 'Mato Grosso'), (b'PA', 'Par\xe1'), (b'PB', 'Para\xedba'), (b'PE', 'Pernambuco'), (b'PI', 'Piau\xed'), (b'PR', 'Paran\xe1'), (b'RJ', 'Rio de Janeiro'), (b'RN', 'Rio Grande do Norte'), (b'RO', 'Rond\xf4nia'), (b'RR', 'Roraima'), (b'RS', 'Rio Grande do Sul'), (b'SC', 'Santa Catarina'), (b'SE', 'Sergipe'), (b'SP', 'S\xe3o Paulo'), (b'TO', 'Tocantins')])),
                ('paisnascto', models.CharField(max_length=3)),
                ('paisnac', models.CharField(max_length=3)),
                ('nmmae', models.CharField(max_length=70, null=True, blank=True)),
                ('nmpai', models.CharField(max_length=70, null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2205evtaltcadastral_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2205evtaltcadastral_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2205evtaltcadastral_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2205evtaltcadastral_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'dtalteracao', 'nistrab', 'nmtrab', 'sexo', 'racacor', 'estciv', 'grauinstr', 'nmsoc', 'dtnascto', 'codmunic', 'uf', 'paisnascto', 'paisnac', 'nmmae', 'nmpai'],
                'db_table': 's2205_evtaltcadastral',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2206evtAltContratual',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11)),
                ('matricula', models.CharField(max_length=30)),
                ('dtalteracao', models.DateField()),
                ('dtef', models.DateField(null=True, blank=True)),
                ('dscalt', models.CharField(max_length=150, null=True, blank=True)),
                ('tpregprev', models.IntegerField(choices=[(1, '1 - Regime Geral da Previd\xeancia Social - RGPS'), (2, '2 - Regime Pr\xf3prio de Previd\xeancia Social - RPPS'), (3, '3 - Regime de Previd\xeancia Social no Exterior')])),
                ('codcargo', models.CharField(max_length=30, null=True, blank=True)),
                ('codfuncao', models.CharField(max_length=30, null=True, blank=True)),
                ('codcateg', models.IntegerField()),
                ('codcarreira', models.CharField(max_length=30, null=True, blank=True)),
                ('dtingrcarr', models.DateField(null=True, blank=True)),
                ('vrsalfx', models.DecimalField(max_length=14, max_digits=15, decimal_places=2)),
                ('undsalfixo', models.IntegerField(choices=[(1, '1 - Por Hora'), (2, '2 - Por Dia'), (3, '3 - Por Semana'), (4, '4 - Por Quinzena'), (5, '5 - Por M\xeas'), (6, '6 - Por Tarefa'), (7, '7 - N\xe3o aplic\xe1vel - sal\xe1rio exclusivamente vari\xe1vel')])),
                ('dscsalvar', models.CharField(max_length=255, null=True, blank=True)),
                ('tpcontr', models.IntegerField(choices=[(1, '1 - Prazo indeterminado'), (2, '2 - Prazo determinado')])),
                ('dtterm', models.DateField(null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2206evtaltcontratual_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2206evtaltcontratual_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2206evtaltcontratual_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2206evtaltcontratual_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula', 'dtalteracao', 'dtef', 'dscalt', 'tpregprev', 'codcargo', 'codfuncao', 'codcateg', 'codcarreira', 'dtingrcarr', 'vrsalfx', 'undsalfixo', 'dscsalvar', 'tpcontr', 'dtterm'],
                'db_table': 's2206_evtaltcontratual',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2210evtCAT',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpregistrador', models.IntegerField(choices=[(1, '1 - Empregador'), (2, '2 - Cooperativa'), (3, '3 - Sindicato de trabalhadores avulsos n\xe3o portu\xe1rios'), (4, '4 - \xd3rg\xe3o Gestor de M\xe3o de Obra'), (5, '5 - Empregado'), (6, '6 - Dependente do empregado'), (7, '7 - Entidade Sindical competente'), (8, '8 - M\xe9dico assistente'), (9, '9 - Autoridade P\xfablica')])),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('dtacid', models.DateField()),
                ('tpacid', models.CharField(max_length=6, choices=[(b'1.0.01', '1.0.01 - Les\xe3o corporal que cause a morte ou a perda ou redu\xe7\xe3o, permanente ou tempor\xe1ria, da capacidade para o trabalho, desde que n\xe3o enquadrada em nenhum dos demais c\xf3digos.'), (b'1.0.02', '1.0.02 - Perturba\xe7\xe3o funcional que cause a morte ou a perda ou redu\xe7\xe3o, permanente ou tempor\xe1ria, da capacidade para o trabalho, desde que n\xe3o enquadrada em nenhum dos demais c\xf3digos.'), (b'2.0.01', '2.0.01 - Doen\xe7a profissional, assim entendida a produzida ou desencadeada pelo exerc\xedcio do trabalho peculiar a determinada atividade e constante da respectiva rela\xe7\xe3o elaborada pelo Minist\xe9rio do Trabalho e Previd\xeancia Social, desde que n\xe3o enquadrada em (...)'), (b'2.0.02', '2.0.02 - Doen\xe7a do trabalho, assim entendida a adquirida ou desencadeada em fun\xe7\xe3o de condi\xe7\xf5es especiais em que o trabalho \xe9 realizado e com ele se relacione diretamente, constante da respectiva rela\xe7\xe3o elaborada pelo Minist\xe9rio do Trabalho e Previd\xeancia (...)'), (b'2.0.03', '2.0.03 - Doen\xe7a proveniente de contamina\xe7\xe3o acidental do empregado no exerc\xedcio de sua atividade.'), (b'2.0.04', '2.0.04 - Doen\xe7a end\xeamica adquirida por segurado habitante de regi\xe3o em que ela se desenvolva quando resultante de exposi\xe7\xe3o ou contato direto determinado pela natureza do trabalho.'), (b'2.0.05', '2.0.05 - Doen\xe7a profissional ou do trabalho n\xe3o inclu\xedda na rela\xe7\xe3o elaborada pelo Minist\xe9rio do Trabalho e Previd\xeancia Social quando resultante das condi\xe7\xf5es especiais em que o trabalho \xe9 executado e com ele se relaciona diretamente.'), (b'2.0.06', '2.0.06 - Doen\xe7a profissional ou do trabalho enquadrada na rela\xe7\xe3o elaborada pelo Minist\xe9rio do Trabalho e Previd\xeancia Social relativa nexo t\xe9cnico epidemiol\xf3gico previdenci\xe1rio - NTEP.'), (b'3.0.01', '3.0.01 - Acidente ligado ao trabalho que, embora n\xe3o tenha sido a causa \xfanica, haja contribu\xeddo diretamente para a morte do segurado, para redu\xe7\xe3o ou perda da sua capacidade para o trabalho, ou produzido les\xe3o que exija aten\xe7\xe3o m\xe9dica para a sua recupera\xe7\xe3 (...)'), (b'3.0.02', '3.0.02 - Acidente sofrido pelo segurado no local e no hor\xe1rio do trabalho, em consequ\xeancia de ato de agress\xe3o, sabotagem ou terrorismo praticado por terceiro ou companheiro de trabalho.'), (b'3.0.03', '3.0.03 - Acidente sofrido pelo segurado no local e no hor\xe1rio do trabalho, em consequ\xeancia de ofensa f\xedsica intencional, inclusive de terceiro, por motivo de disputa relacionada ao trabalho.'), (b'3.0.04', '3.0.04 - Acidente sofrido pelo segurado no local e no hor\xe1rio do trabalho, em consequ\xeancia de ato de imprud\xeancia, de neglig\xeancia ou de imper\xedcia de terceiro ou de companheiro de trabalho.'), (b'3.0.05', '3.0.05 - Acidente sofrido pelo segurado no local e no hor\xe1rio do trabalho, em consequ\xeancia de ato de pessoa privada do uso da raz\xe3o.'), (b'3.0.06', '3.0.06 - Acidente sofrido pelo segurado no local e no hor\xe1rio do trabalho, em consequ\xeancia de desabamento, inunda\xe7\xe3o, inc\xeandio e outros casos fortuitos ou decorrentes de for\xe7a maior.'), (b'3.0.07', '3.0.07 - Acidente sofrido pelo segurado ainda que fora do local e hor\xe1rio de trabalho na execu\xe7\xe3o de ordem ou na realiza\xe7\xe3o de servi\xe7o sob a autoridade da empresa.'), (b'3.0.08', '3.0.08 - Acidente sofrido pelo segurado ainda que fora do local e hor\xe1rio de trabalho na presta\xe7\xe3o espont\xe2nea de qualquer servi\xe7o \xe0 empresa para lhe evitar preju\xedzo ou proporcionar proveito.'), (b'3.0.09', '3.0.09 - Acidente sofrido pelo segurado ainda que fora do local e hor\xe1rio de trabalho em viagem a servi\xe7o da empresa, inclusive para estudo quando financiada por esta dentro de seus planos para melhor capacita\xe7\xe3o da m\xe3o-de- obra, independentemente do meio (...)'), (b'3.0.10', '3.0.10 - Acidente sofrido pelo segurado ainda que fora do local e hor\xe1rio de trabalho no percurso da resid\xeancia para o local de trabalho ou deste para aquela, qualquer que seja o meio de locomo\xe7\xe3o, inclusive ve\xedculo de propriedade do segurado.'), (b'3.0.11', '3.0.11 - Acidente sofrido pelo segurado nos per\xedodos destinados a refei\xe7\xe3o ou descanso, ou por ocasi\xe3o da satisfa\xe7\xe3o de outras necessidades fisiol\xf3gicas, no local do trabalho ou durante este.'), (b'4.0.01', '4.0.01 - Suspeita de doen\xe7as profissionais ou do trabalho produzidas pelas condi\xe7\xf5es especiais de trabalho, nos termos do art 169 da CLT.'), (b'4.0.02', '4.0.02 - Constata\xe7\xe3o de ocorr\xeancia ou agravamento de doen\xe7as profissionais, atrav\xe9s de exames m\xe9dicos que incluam os definidos na NR 07; ou sendo verificadas altera\xe7\xf5es que revelem qualquer tipo de disfun\xe7\xe3o de \xf3rg\xe3o ou sistema biol\xf3gico, atrav\xe9s dos exame (...)'), (b'5.0.01', '5.0.01 - Outros')])),
                ('hracid', models.CharField(max_length=4)),
                ('hrstrabantesacid', models.CharField(max_length=4)),
                ('tpcat', models.IntegerField(choices=[(1, '1 - Inicial'), (2, '2 - Reabertura'), (3, '3 - Comunica\xe7\xe3o de \xd3bito')])),
                ('indcatobito', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('dtobito', models.DateField(null=True, blank=True)),
                ('indcomunpolicia', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('codsitgeradora', models.IntegerField(blank=True, null=True, choices=[(200004300, '200004300 - Impacto de pessoa contra objeto parado'), (200004600, '200004600 - Impacto de pessoa contra objeto em movimento'), (200008300, '200008300 - Impacto sofrido por pessoa de objeto que cai'), (200008600, '200008600 - Impacto sofrido por pessoa de objeto projetado'), (200008900, '200008900 - Impacto sofrido por pessoa, NIC'), (200012200, '200012200 - Queda de pessoa com diferen\xe7a de n\xedvel de andaime, passagem, plataforma, etc.'), (200012300, '200012300 - Queda de pessoa com diferen\xe7a de n\xedvel de escada m\xf3vel ou fixada cujos degraus'), (200012400, '200012400 - Queda de pessoa com diferen\xe7a de n\xedvel de material empilhado'), (200012500, '200012500 - Queda de pessoa com diferen\xe7a de n\xedvel de ve\xedculo'), (200012600, '200012600 - Queda de pessoa com diferen\xe7a de n\xedvel em escada permanente'), (200012700, '200012700 - Queda de pessoa com diferen\xe7a de n\xedvel em po\xe7o, escava\xe7\xe3o, abertura no piso, etc.'), (200012900, '200012900 - Queda de pessoa com diferen\xe7a de n\xedvel, NIC'), (200016300, '200016300 - Queda de pessoa em mesmo n\xedvel em passagem ou superf\xedcie de sustenta\xe7\xe3o'), (200016600, '200016600 - Queda de pessoa em mesmo n\xedvel sobre ou contra alguma coisa'), (200016900, '200016900 - Queda de pessoa em mesmo n\xedvel, NIC'), (200020100, '200020100 - Aprisionamento em, sobre ou entre objetos em movimento convergente'), (200020300, '200020300 - Aprisionamento em, sobre ou entre objeto parado e outro em movimento'), (200020500, '200020500 - Aprisionamento em, sobre ou entre dois ou mais objetos em movimento'), (200020700, '200020700 - Aprisionamento em, sobre ou entre desabamento ou desmoronamento'), (200020900, '200020900 - Aprisionamento em, sob ou entre, NIC'), (200024300, '200024300 - Atrito ou abras\xe3o por encostar, pisar, ajoelhar ou sentar em objeto'), (200024400, '200024400 - Atrito ou abras\xe3o por manusear objeto'), (200024500, '200024500 - Atrito ou abras\xe3o por objeto em vibra\xe7\xe3o'), (200024600, '200024600 - Atrito ou abras\xe3o por corpo estranho no olho'), (200024700, '200024700 - Atrito ou abras\xe3o por compress\xe3o repetitiva'), (200024900, '200024900 - Atrito ou abras\xe3o, NIC'), (200028300, '200028300 - Rea\xe7\xe3o do corpo a movimento involunt\xe1rio'), (200028600, '200028600 - Rea\xe7\xe3o do corpo a movimento volunt\xe1rio'), (200032200, '200032200 - Esfor\xe7o excessivo ao erguer objeto'), (200032400, '200032400 - Esfor\xe7o excessivo ao empurrar ou puxar objeto'), (200032600, '200032600 - Esfor\xe7o excessivo ao manejar, sacudir ou arremessar objeto'), (200032900, '200032900 - Esfor\xe7o excessivo, NIC'), (200036000, '200036000 - El\xe9trica, exposi\xe7\xe3o a energia'), (200040300, '200040300 - Temperatura muito alta, contato com objeto ou subst\xe2ncia a'), (200040600, '200040600 - Temperatura muito baixa, contato com objeto ou subst\xe2ncia a'), (200044300, '200044300 - Temperatura ambiente elevada, exposi\xe7\xe3o a'), (200044600, '200044600 - Temperatura ambiente baixa, exposi\xe7\xe3o a'), (200048200, '200048200 - Inala\xe7\xe3o de subst\xe2ncia c\xe1ustica, t\xf3xica ou nociva'), (200048400, '200048400 - Ingest\xe3o de subst\xe2ncia c\xe1ustica'), (200048600, '200048600 - Absor\xe7\xe3o de subst\xe2ncia c\xe1ustica'), (200048900, '200048900 - Inala\xe7\xe3o, ingest\xe3o ou absor\xe7\xe3o, NIC'), (200052000, '200052000 - Imers\xe3o'), (200056000, '200056000 - Radia\xe7\xe3o n\xe3o ionizante, exposi\xe7\xe3o a'), (200060000, '200060000 - Radia\xe7\xe3o ionizante, exposi\xe7\xe3o a'), (200064000, '200064000 - Ru\xeddo, exposi\xe7\xe3o a'), (200068000, '200068000 - Vibra\xe7\xe3o, exposi\xe7\xe3o a'), (200072000, '200072000 - Press\xe3o ambiente, exposi\xe7\xe3o a'), (200072300, '200072300 - Exposi\xe7\xe3o \xe0 press\xe3o ambiente elevada'), (200072600, '200072600 - Exposi\xe7\xe3o \xe0 press\xe3o ambiente baixa'), (200076200, '200076200 - Polui\xe7\xe3o da \xe1gua, a\xe7\xe3o da (exposi\xe7\xe3o \xe0 polui\xe7\xe3o da \xe1gua)'), (200076400, '200076400 - Polui\xe7\xe3o do ar, a\xe7\xe3o da (exposi\xe7\xe3o \xe0 polui\xe7\xe3o do ar)'), (200076600, '200076600 - Polui\xe7\xe3o do solo, a\xe7\xe3o da (exposi\xe7\xe3o \xe0 polui\xe7\xe3o do solo)'), (200076900, '200076900 - Polui\xe7\xe3o, NIC, exposi\xe7\xe3o a (exposi\xe7\xe3o \xe0 polui\xe7\xe3o, NIC)'), (200080200, '200080200 - Ataque de ser vivo por mordedura, picada, chifrada, coice, etc.'), (200080400, '200080400 - Ataque de ser vivo com pe\xe7onha'), (200080600, '200080600 - Ataque de ser vivo com transmiss\xe3o de doen\xe7a'), (200080900, '200080900 - Ataque de ser vivo, NIC'), (209000000, '209000000 - Tipo, NIC'), (209500000, '209500000 - Tipo inexistente')])),
                ('iniciatcat', models.IntegerField(choices=[(1, '1 - Iniciativa do Registrador (identificado em {ideRegistrador})'), (2, '2 - Ordem judicial'), (3, '3 - Determina\xe7\xe3o de \xf3rg\xe3o fiscalizador')])),
                ('observacao', models.CharField(max_length=255, null=True, blank=True)),
                ('tplocal', models.IntegerField(choices=[(1, '1 - Estabelecimento do empregador no Brasil'), (2, '2 - Estabelecimento do empregador no Exterior'), (3, '3 - Estabelecimento de terceiros onde o empregador presta servi\xe7os'), (4, '4 - Via p\xfablica'), (5, '5 - \xc1rea rural'), (6, '6 - Embarca\xe7\xe3o'), (9, '9 - Outros')])),
                ('dsclocal', models.CharField(max_length=80, null=True, blank=True)),
                ('dsclograd', models.CharField(max_length=100, null=True, blank=True)),
                ('nrlograd', models.CharField(max_length=10, null=True, blank=True)),
                ('codmunic', models.TextField(max_length=7, null=True, blank=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True, choices=[(b'AC', 'Acre'), (b'AL', 'Alagoas'), (b'AM', 'Amazonas'), (b'AP', 'Amap\xe1'), (b'BA', 'Bahia'), (b'CE', 'Cear\xe1'), (b'DF', 'Distrito Federal'), (b'ES', 'Esp\xedrito Santo'), (b'GO', 'Goi\xe1s'), (b'MA', 'Maranh\xe3o'), (b'MG', 'Minas Gerais'), (b'MS', 'Mato Grosso do Sul'), (b'MT', 'Mato Grosso'), (b'PA', 'Par\xe1'), (b'PB', 'Para\xedba'), (b'PE', 'Pernambuco'), (b'PI', 'Piau\xed'), (b'PR', 'Paran\xe1'), (b'RJ', 'Rio de Janeiro'), (b'RN', 'Rio Grande do Norte'), (b'RO', 'Rond\xf4nia'), (b'RR', 'Roraima'), (b'RS', 'Rio Grande do Sul'), (b'SC', 'Santa Catarina'), (b'SE', 'Sergipe'), (b'SP', 'S\xe3o Paulo'), (b'TO', 'Tocantins')])),
                ('cnpjlocalacid', models.CharField(max_length=14, null=True, blank=True)),
                ('pais', models.CharField(blank=True, max_length=3, null=True, choices=[(b'008', '008 - Abu Dhabi'), (b'009', '009 - Dirce'), (b'013', '013 - Afeganistao'), (b'017', '017 - Albania, Republica Da'), (b'020', '020 - Alboran-Perejil,Ilhas'), (b'023', '023 - Alemanha'), (b'025', '025 - Alemanha, Republica Democratica'), (b'031', '031 - Burkina Faso'), (b'037', '037 - Andorra'), (b'040', '040 - Angola'), (b'041', '041 - Anguilla'), (b'043', '043 - Antigua E Barbuda'), (b'047', '047 - Antilhas Holandesas'), (b'053', '053 - Arabia Saudita'), (b'059', '059 - Argelia'), (b'063', '063 - Argentina'), (b'064', '064 - Armenia, Republica Da'), (b'065', '065 - Aruba'), (b'069', '069 - Australia'), (b'072', '072 - Austria'), (b'073', '073 - Azerbaijao, Republica Do'), (b'077', '077 - Bahamas, Ilhas'), (b'080', '080 - Bahrein, Ilhas'), (b'081', '081 - Bangladesh'), (b'083', '083 - Barbados'), (b'085', '085 - Belarus, Republica Da'), (b'087', '087 - Belgica'), (b'088', '088 - Belize'), (b'090', '090 - Bermudas'), (b'093', '093 - Mianmar (BIRMANIA)'), (b'097', '097 - Bolivia, Estado Plurinacional Da'), (b'098', '098 - Bosnia-Herzegovina (REPUBLICA Da)'), (b'100', '100 - Int.Z.F.Manaus'), (b'101', '101 - Botsuana'), (b'105', '105 - Brasil'), (b'106', '106 - Fretado P/Brasil'), (b'108', '108 - Brunei'), (b'111', '111 - Bulgaria, Republica Da'), (b'115', '115 - Burundi'), (b'119', '119 - Butao'), (b'127', '127 - Cabo Verde, Republica De'), (b'131', '131 - Cachemira'), (b'137', '137 - Cayman, Ilhas'), (b'141', '141 - Camboja'), (b'145', '145 - Camaroes'), (b'149', '149 - Canada'), (b'150', '150 - Jersey, Ilha Do Canal'), (b'151', '151 - Canarias, Ilhas'), (b'152', '152 - Canal,Ilhas'), (b'153', '153 - Cazaquistao, Republica Do'), (b'154', '154 - Catar'), (b'158', '158 - Chile'), (b'160', '160 - China, Republica Popular'), (b'161', '161 - Formosa (TAIWAN)'), (b'163', '163 - Chipre'), (b'165', '165 - Cocos(Keeling),Ilhas'), (b'169', '169 - Colombia'), (b'173', '173 - Comores, Ilhas'), (b'177', '177 - Congo'), (b'183', '183 - Cook, Ilhas'), (b'187', '187 - Coreia (DO Norte), Rep.Pop.Democratica'), (b'190', '190 - Coreia (DO Sul), Republica Da'), (b'193', '193 - Costa Do Marfim'), (b'195', '195 - Croacia (REPUBLICA Da)'), (b'196', '196 - Costa Rica'), (b'198', '198 - Coveite'), (b'199', '199 - Cuba'), (b'229', '229 - Benin'), (b'232', '232 - Dinamarca'), (b'235', '235 - Dominica,Ilha'), (b'237', '237 - Dubai'), (b'239', '239 - Equador'), (b'240', '240 - Egito'), (b'243', '243 - Eritreia'), (b'244', '244 - Emirados Arabes Unidos'), (b'245', '245 - Espanha'), (b'246', '246 - Eslovenia, Republica Da'), (b'247', '247 - Eslovaca, Republica'), (b'249', '249 - Estados Unidos'), (b'251', '251 - Estonia, Republica Da'), (b'253', '253 - Etiopia'), (b'255', '255 - Falkland (ILHAS Malvinas)'), (b'259', '259 - Feroe, Ilhas'), (b'263', '263 - Fezzan'), (b'267', '267 - Filipinas'), (b'271', '271 - Finlandia'), (b'275', '275 - Franca'), (b'281', '281 - Gabao'), (b'285', '285 - Gambia'), (b'289', '289 - Gana'), (b'291', '291 - Georgia, Republica Da'), (b'293', '293 - Gibraltar'), (b'297', '297 - Granada'), (b'301', '301 - Grecia'), (b'305', '305 - Groenlandia'), (b'309', '309 - Guadalupe'), (b'313', '313 - Guam'), (b'317', '317 - Guatemala'), (b'325', '325 - Guiana Francesa'), (b'329', '329 - Guine'), (b'331', '331 - Guine-Equatorial'), (b'334', '334 - Guine-Bissau'), (b'337', '337 - Guiana'), (b'341', '341 - Haiti'), (b'345', '345 - Honduras'), (b'351', '351 - Hong Kong'), (b'355', '355 - Hungria, Republica Da'), (b'357', '357 - Iemen'), (b'358', '358 - Iemem Do Sul'), (b'359', '359 - Man, Ilha De'), (b'361', '361 - India'), (b'365', '365 - Indonesia'), (b'367', '367 - Inglaterra'), (b'369', '369 - Iraque'), (b'372', '372 - Ira, Republica Islamica Do'), (b'375', '375 - Irlanda'), (b'379', '379 - Islandia'), (b'383', '383 - Israel'), (b'386', '386 - Italia'), (b'388', '388 - Servia E Montenegro'), (b'391', '391 - Jamaica'), (b'395', '395 - Jammu'), (b'396', '396 - Johnston, Ilhas'), (b'399', '399 - Japao'), (b'403', '403 - Jordania'), (b'411', '411 - Kiribati'), (b'420', '420 - Laos, Rep.Pop.Democr.Do'), (b'423', '423 - Lebuan,Ilhas'), (b'426', '426 - Lesoto'), (b'427', '427 - Letonia, Republica Da'), (b'431', '431 - Libano'), (b'434', '434 - Liberia'), (b'438', '438 - Libia'), (b'440', '440 - Liechtenstein'), (b'442', '442 - Lituania, Republica Da'), (b'445', '445 - Luxemburgo'), (b'447', '447 - Macau'), (b'449', '449 - Macedonia, Ant.Rep.Iugoslava'), (b'450', '450 - Madagascar'), (b'452', '452 - Ilha Da Madeira'), (b'455', '455 - Malasia'), (b'458', '458 - Malavi'), (b'461', '461 - Maldivas'), (b'464', '464 - Mali'), (b'467', '467 - Malta'), (b'472', '472 - Marianas Do Norte'), (b'474', '474 - Marrocos'), (b'476', '476 - Marshall,Ilhas'), (b'477', '477 - Martinica'), (b'485', '485 - Mauricio'), (b'488', '488 - Mauritania'), (b'490', '490 - Midway, Ilhas'), (b'493', '493 - Mexico'), (b'494', '494 - Moldavia, Republica Da'), (b'495', '495 - Monaco'), (b'497', '497 - Mongolia'), (b'499', '499 - Micronesia'), (b'501', '501 - Montserrat,Ilhas'), (b'505', '505 - Mocambique'), (b'507', '507 - Namibia'), (b'508', '508 - Nauru'), (b'511', '511 - Christmas,Ilha (NAVIDAD)'), (b'517', '517 - Nepal'), (b'521', '521 - Nicaragua'), (b'525', '525 - Niger'), (b'528', '528 - Nigeria'), (b'531', '531 - Niue,Ilha'), (b'535', '535 - Norfolk,Ilha'), (b'538', '538 - Noruega'), (b'542', '542 - Nova Caledonia'), (b'545', '545 - Papua Nova Guine'), (b'548', '548 - Nova Zelandia'), (b'551', '551 - Vanuatu'), (b'556', '556 - Oma'), (b'563', '563 - Pacifico,Ilhas Do (ADMINISTRACAO Dos Eua)'), (b'566', '566 - Pacifico,Ilhas Do (POSSESSAO Dos Eua)'), (b'569', '569 - Pacifico,Ilhas Do (TERRITORIO Em Fideicomisso Dos'), (b'573', '573 - Paises Baixos (HOLANDA)'), (b'575', '575 - Palau'), (b'576', '576 - Paquistao'), (b'578', '578 - Palestina'), (b'580', '580 - Panama'), (b'583', '583 - Papua Nova Guin\xe9'), (b'586', '586 - Paraguai'), (b'589', '589 - Peru'), (b'593', '593 - Pitcairn,Ilha'), (b'599', '599 - Polinesia Francesa'), (b'603', '603 - Polonia, Republica Da'), (b'607', '607 - Portugal'), (b'611', '611 - Porto Rico'), (b'623', '623 - Quenia'), (b'625', '625 - Quirguiz, Republica'), (b'628', '628 - Reino Unido'), (b'640', '640 - Republica Centro-Africana'), (b'647', '647 - Republica Dominicana'), (b'660', '660 - Reuniao, Ilha'), (b'665', '665 - Zimbabue'), (b'670', '670 - Romenia'), (b'675', '675 - Ruanda'), (b'676', '676 - Russia, Federacao Da'), (b'677', '677 - Salomao, Ilhas'), (b'678', '678 - Saint Kitts E Nevis'), (b'685', '685 - Saara Ocidental'), (b'687', '687 - El Salvador'), (b'690', '690 - Samoa'), (b'691', '691 - Samoa Americana'), (b'695', '695 - Sao Cristovao E Neves,Ilhas'), (b'697', '697 - San Marino'), (b'700', '700 - Sao Pedro E Miquelon'), (b'705', '705 - Sao Vicente E Granadinas'), (b'710', '710 - Santa Helena'), (b'715', '715 - Santa Lucia'), (b'720', '720 - Sao Tome E Principe, Ilhas'), (b'728', '728 - Senegal'), (b'731', '731 - Seychelles'), (b'735', '735 - Serra Leoa'), (b'738', '738 - Sikkim'), (b'741', '741 - Cingapura'), (b'744', '744 - Siria, Republica Arabe Da'), (b'748', '748 - Somalia'), (b'750', '750 - Sri Lanka'), (b'754', '754 - Suazilandia'), (b'756', '756 - Africa Do Sul'), (b'759', '759 - Sudao'), (b'764', '764 - Suecia'), (b'767', '767 - Suica'), (b'770', '770 - Suriname'), (b'772', '772 - Tadjiquistao, Republica Do'), (b'776', '776 - Tailandia'), (b'780', '780 - Tanzania, Rep.Unida Da'), (b'782', '782 - Territorio Brit.Oc.Indico'), (b'783', '783 - Djibuti'), (b'785', '785 - Territorio da Alta Comissao do Pacifico Ocidental'), (b'788', '788 - Chade'), (b'790', '790 - Tchecoslovaquia'), (b'791', '791 - Tcheca, Republica'), (b'795', '795 - Timor Leste'), (b'800', '800 - Togo'), (b'805', '805 - Toquelau,Ilhas'), (b'810', '810 - Tonga'), (b'815', '815 - Trinidad E Tobago'), (b'820', '820 - Tunisia'), (b'823', '823 - Turcas E Caicos,Ilhas'), (b'824', '824 - Turcomenistao, Republica Do'), (b'827', '827 - Turquia'), (b'828', '828 - Tuvalu'), (b'831', '831 - Ucrania'), (b'833', '833 - Uganda'), (b'840', '840 - Uniao Das Republicas Socialistas Sovieticas'), (b'845', '845 - Uruguai'), (b'847', '847 - Uzbequistao, Republica Do'), (b'848', '848 - Vaticano, Est.Da Cidade Do'), (b'850', '850 - Venezuela'), (b'855', '855 - Vietname Norte'), (b'858', '858 - Vietna'), (b'863', '863 - Virgens,Ilhas (BRITANICAS)'), (b'866', '866 - Virgens,Ilhas (E.U.A.)'), (b'870', '870 - Fiji'), (b'873', '873 - Wake, Ilha'), (b'875', '875 - Wallis E Futuna, Ilhas'), (b'888', '888 - Congo, Republica Democratica Do'), (b'890', '890 - Zambia')])),
                ('codpostal', models.CharField(max_length=12, null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2210evtcat_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2210evtcat_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2210evtcat_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2210evtcat_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpregistrador', 'tpinsc', 'nrinsc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'dtacid', 'tpacid', 'hracid', 'hrstrabantesacid', 'tpcat', 'indcatobito', 'dtobito', 'indcomunpolicia', 'codsitgeradora', 'iniciatcat', 'observacao', 'tplocal', 'dsclocal', 'dsclograd', 'nrlograd', 'codmunic', 'uf', 'cnpjlocalacid', 'pais', 'codpostal'],
                'db_table': 's2210_evtcat',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2220evtMonit',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('matricula', models.CharField(max_length=30, null=True, blank=True)),
                ('dtaso', models.DateField()),
                ('tpaso', models.IntegerField(choices=[(0, '0 - Admissional'), (1, '1 - Peri\xf3dico, conforme planejamento do PCMSO'), (2, '2 - De retorno ao trabalho'), (3, '3 - De mudan\xe7a de fun\xe7\xe3o'), (4, '4 - De monitora\xe7\xe3o pontual, n\xe3o enquadrado nos casos anteriores'), (8, '8 - Demissional')])),
                ('resaso', models.IntegerField(choices=[(1, '1 - Apto'), (2, '2 - Inapto')])),
                ('codcnes', models.CharField(max_length=7, null=True, blank=True)),
                ('frmctt', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=60, null=True, blank=True)),
                ('nmmed', models.CharField(max_length=70)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2220evtmonit_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2220evtmonit_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2220evtmonit_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2220evtmonit_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula', 'dtaso', 'tpaso', 'resaso', 'codcnes', 'frmctt', 'email', 'nmmed'],
                'db_table': 's2220_evtmonit',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2230evtAfastTemp',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('matricula', models.CharField(max_length=30, null=True, blank=True)),
                ('codcateg', models.IntegerField(blank=True, null=True, choices=[(101, '101 - Empregado - Geral, inclusive o empregado p\xfablico da administra\xe7\xe3o direta ou indireta contratado pela CLT.'), (102, '102 - Empregado - Trabalhador Rural por Pequeno Prazo da Lei 11.718/2008'), (103, '103 - Empregado - Aprendiz'), (104, '104 - Empregado - Dom\xe9stico'), (105, '105 - Empregado - contrato a termo firmado nos termos da Lei 9601/98'), (106, '106 - Trabalhador Tempor\xe1rio - contrato por prazo determinado nos termos da Lei 6019/74'), (111, '111 - Empregado - contrato de trabalho intermitente'), (201, '201 - Trabalhador Avulso Portu\xe1rio'), (202, '202 - Trabalhador Avulso N\xe3o Portu\xe1rio'), (301, '301 - Servidor P\xfablico Titular de Cargo Efetivo, Magistrado, Ministro de Tribunal de Contas, Conselheiro de Tribunal de Contas e Membro do Minist\xe9rio P\xfablico'), (302, '302 - Servidor P\xfablico Ocupante de Cargo exclusivo em comiss\xe3o'), (303, '303 - Agente Pol\xedtico'), (305, '305 - Servidor P\xfablico indicado para conselho ou \xf3rg\xe3o deliberativo, na condi\xe7\xe3o de representante do governo, \xf3rg\xe3o ou entidade da administra\xe7\xe3o p\xfablica.'), (306, '306 - Servidor P\xfablico Tempor\xe1rio, sujeito a regime administrativo especial definido em lei pr\xf3pria'), (307, '307 - Militar efetivo'), (308, '308 - Conscrito'), (309, '309 - Agente P\xfablico - Outros'), (401, '401 - Dirigente Sindical - informa\xe7\xe3o prestada pelo Sindicato'), (410, '410 - Trabalhador cedido - informa\xe7\xe3o prestada pelo Cession\xe1rio'), (701, '701 - Contribuinte individual - Aut\xf4nomo em geral, exceto se enquadrado em uma das demais categorias de contribuinte individual'), (711, '711 - Contribuinte individual - Transportador aut\xf4nomo de passageiros'), (712, '712 - Contribuinte individual - Transportador aut\xf4nomo de carga'), (721, '721 - Contribuinte individual - Diretor n\xe3o empregado, com FGTS'), (722, '722 - Contribuinte individual - Diretor n\xe3o empregado, sem FGTS'), (723, '723 - Contribuinte individual - empres\xe1rios, s\xf3cios e membro de conselho de administra\xe7\xe3o ou fiscal'), (731, '731 - Contribuinte individual - Cooperado que presta servi\xe7os por interm\xe9dio de Cooperativa de Trabalho'), (734, '734 - Contribuinte individual - Transportador Cooperado que presta servi\xe7os por interm\xe9dio de cooperativa de trabalho'), (738, '738 - Contribuinte individual - Cooperado filiado a Cooperativa de Produ\xe7\xe3o'), (741, '741 - Contribuinte individual - Microempreendedor Individual'), (751, '751 - Contribuinte individual - magistrado classista tempor\xe1rio da Justi\xe7a do Trabalho ou da Justi\xe7a Eleitoral que seja aposentado de qualquer regime previdenci\xe1rio'), (761, '761 - Contribuinte individual - Associado eleito para dire\xe7\xe3o de Cooperativa, associa\xe7\xe3o ou entidade de classe de qualquer natureza ou finalidade, bem como o s\xedndico ou administrador eleito para exercer atividade de dire\xe7\xe3o condominial, desde que recebam r (...)'), (771, '771 - Contribuinte individual - Membro de conselho tutelar, nos termos da Lei n\xba 8.069, de 13 de julho de 1990'), (781, '781 - Ministro de confiss\xe3o religiosa ou membro de vida consagrada, de congrega\xe7\xe3o ou de ordem religiosa'), (901, '901 - Estagi\xe1rio'), (902, '902 - M\xe9dico Residente'), (903, '903 - Bolsista, nos termos da lei 8958/1994'), (904, '904 - Participante de curso de forma\xe7\xe3o, como etapa de concurso p\xfablico, sem v\xednculo de emprego/estatut\xe1rio'), (905, '905 - Atleta n\xe3o profissional em forma\xe7\xe3o que receba bolsa')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2230evtafasttemp_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2230evtafasttemp_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2230evtafasttemp_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2230evtafasttemp_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula', 'codcateg'],
                'db_table': 's2230_evtafasttemp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2240evtExpRisco',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('matricula', models.CharField(max_length=30, null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s2240evtexprisco_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2240evtexprisco_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2240evtexprisco_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2240evtexprisco_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula'],
                'db_table': 's2240_evtexprisco',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2241evtInsApo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('matricula', models.CharField(max_length=30, null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Insalubridade/Periculosidade - Incluir'), (2, 'Insalubridade/Periculosidade - Alterar'), (3, 'Insalubridade/Periculosidade - Excluir'), (4, 'Aposentadoria Especial - Incluir'), (5, 'Aposentadoria Especial - Alterar'), (6, 'Aposentadoria Especial - Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s2241evtinsapo_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2241evtinsapo_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2241evtinsapo_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2241evtinsapo_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula'],
                'db_table': 's2241_evtinsapo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2250evtAvPrevio',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11)),
                ('matricula', models.CharField(max_length=30)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2250evtavprevio_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2250evtavprevio_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2250evtavprevio_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2250evtavprevio_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula'],
                'db_table': 's2250_evtavprevio',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2260evtConvInterm',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - arquivo original'), (2, '2 - arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11)),
                ('matricula', models.CharField(max_length=30)),
                ('codconv', models.CharField(max_length=30)),
                ('dtinicio', models.DateField()),
                ('dtfim', models.DateField()),
                ('dtprevpgto', models.DateField()),
                ('codhorcontrat', models.CharField(max_length=30, null=True, blank=True)),
                ('dscjornada', models.CharField(max_length=999, null=True, blank=True)),
                ('indlocal', models.IntegerField(choices=[(0, '0 - Presta\xe7\xe3o de servi\xe7os no estabelecimento informado no grupo {localTrabGeral} do S-2200 ou S-2206, quando for o caso'), (1, '1 - Presta\xe7\xe3o de servi\xe7os em apenas um local e fora do estabelecimento informado no grupo {localTrabGeral} do S-2200 ou S-2206, quando for o caso'), (2, '2 - Presta\xe7\xe3o de servi\xe7os de natureza externa ou em mais de um local')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2260evtconvinterm_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2260evtconvinterm_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2260evtconvinterm_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2260evtconvinterm_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula', 'codconv', 'dtinicio', 'dtfim', 'dtprevpgto', 'codhorcontrat', 'dscjornada', 'indlocal'],
                'db_table': 's2260_evtconvinterm',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2298evtReintegr',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11)),
                ('matricula', models.CharField(max_length=30)),
                ('tpreint', models.IntegerField(choices=[(1, '1 - Reintegra\xe7\xe3o por Decis\xe3o Judicial'), (2, '2 - Reintegra\xe7\xe3o por Anistia Legal'), (3, '3 - Revers\xe3o de Servidor P\xfablico'), (4, '4 - Recondu\xe7\xe3o de Servidor P\xfablico'), (5, '5 - Reinclus\xe3o de Militar'), (9, '9 - Outros')])),
                ('nrprocjud', models.CharField(max_length=20, null=True, blank=True)),
                ('nrleianistia', models.CharField(max_length=13, null=True, blank=True)),
                ('dtefetretorno', models.DateField()),
                ('dtefeito', models.DateField()),
                ('indpagtojuizo', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2298evtreintegr_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2298evtreintegr_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2298evtreintegr_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2298evtreintegr_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula', 'tpreint', 'nrprocjud', 'nrleianistia', 'dtefetretorno', 'dtefeito', 'indpagtojuizo'],
                'db_table': 's2298_evtreintegr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2299evtDeslig',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11)),
                ('matricula', models.CharField(max_length=30)),
                ('mtvdeslig', models.CharField(max_length=2, choices=[(b'01', '01 - Rescis\xe3o com justa causa, por iniciativa do empregador'), (b'02', '02 - Rescis\xe3o sem justa causa, por iniciativa do empregador'), (b'03', '03 - Rescis\xe3o antecipada do contrato a termo por iniciativa do empregador'), (b'04', '04 - Rescis\xe3o antecipada do contrato a termo por iniciativa do empregado'), (b'05', '05 - Rescis\xe3o por culpa rec\xedproca'), (b'06', '06 - Rescis\xe3o por t\xe9rmino do contrato a termo'), (b'07', '07 - Rescis\xe3o do contrato de trabalho por iniciativa do empregado'), (b'08', '08 - Rescis\xe3o do contrato de trabalho por interesse do(a) empregado(a), nas hip\xf3teses previstas nos arts. 394 e 483, \xa7 1\xba da CLT'), (b'09', '09 - Rescis\xe3o por falecimento do empregador individual ou empregador dom\xe9stico por op\xe7\xe3o do empregado'), (b'10', '10 - Rescis\xe3o por falecimento do empregado'), (b'11', '11 - Transfer\xeancia de empregado para empresa do mesmo grupo empresarial que tenha assumido os encargos trabalhistas, sem que tenha havido rescis\xe3o do contrato de trabalho'), (b'12', '12 - Transfer\xeancia de empregado da empresa consorciada para o cons\xf3rcio que tenha assumido os encargos trabalhistas, e vice-versa, sem que tenha havido rescis\xe3o do contrato de trabalho'), (b'13', '13 - Transfer\xeancia de empregado de empresa ou cons\xf3rcio, para outra empresa ou cons\xf3rcio que tenha assumido os encargos trabalhistas por motivo de sucess\xe3o (fus\xe3o, cis\xe3o ou incorpora\xe7\xe3o), sem que tenha havido rescis\xe3o do contrato de trabalho'), (b'14', '14 - Rescis\xe3o do contrato de trabalho por encerramento da empresa, de seus estabelecimentos ou supress\xe3o de parte de suas atividades ou falecimento do empregador individual ou empregador dom\xe9stico sem continua\xe7\xe3o da atividade'), (b'15', '15 - Demiss\xe3o de Aprendizes por Desempenho Insuficiente ou Inadapta\xe7\xe3o'), (b'16', '16 - Declara\xe7\xe3o de nulidade do contrato de trabalho por infring\xeancia ao inciso II do art. 37 da Constitui\xe7\xe3o Federal, quando mantido o direito ao sal\xe1rio'), (b'17', '17 - Rescis\xe3o Indireta do Contrato de Trabalho'), (b'18', '18 - Aposentadoria Compuls\xf3ria (somente para categorias de trabalhadores 301 a 309)'), (b'19', '19 - Aposentadoria por idade (somente para categorias de trabalhadores 301 a 309)'), (b'20', '20 - Aposentadoria por idade e tempo de contribui\xe7\xe3o (somente categorias 301 a 309)'), (b'21', '21 - Reforma Militar (somente para categorias de trabalhadores 301 a 309)'), (b'22', '22 - Reserva Militar (somente para categorias de trabalhadores 301 a 309)'), (b'23', '23 - Exonera\xe7\xe3o (somente para categorias de trabalhadores 301 a 309)'), (b'24', '24 - Demiss\xe3o (somente para categorias de trabalhadores 301 a 309)'), (b'25', '25 - Vac\xe2ncia para assumir outro cargo efetivo (somente para categorias de trabalhadores 301 a 309)'), (b'26', '26 - Rescis\xe3o do contrato de trabalho por paralisa\xe7\xe3o tempor\xe1ria ou definitiva da empresa, estabelecimento ou parte das atividades motivada por atos de autoridade municipal, estadual ou federal'), (b'27', '27 - Rescis\xe3o por motivo de for\xe7a maior'), (b'28', '28 - T\xe9rmino da Cess\xe3o/Requisi\xe7\xe3o'), (b'29', '29 - Redistribui\xe7\xe3o'), (b'30', '30 - Mudan\xe7a de Regime Trabalhista'), (b'31', '31 - Revers\xe3o de Reintegra\xe7\xe3o'), (b'32', '32 - Extravio de Militar'), (b'33', '33 - Rescis\xe3o por acordo entre as partes (art. 484-A da CLT)'), (b'34', '34 - Transfer\xeancia de titularidade do empregado dom\xe9stico para outro representante da mesma unidade familiar')])),
                ('dtdeslig', models.DateField()),
                ('indpagtoapi', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('dtprojfimapi', models.DateField(null=True, blank=True)),
                ('pensalim', models.IntegerField(choices=[(0, '0 - N\xe3o existe pens\xe3o aliment\xedcia'), (1, '1 - Percentual de pens\xe3o aliment\xedcia'), (2, '2 - Valor de pens\xe3o aliment\xedcia'), (3, '3 - Percentual e valor de pens\xe3o aliment\xedcia')])),
                ('percaliment', models.DecimalField(max_length=5, null=True, max_digits=15, decimal_places=2, blank=True)),
                ('vralim', models.DecimalField(max_length=14, null=True, max_digits=15, decimal_places=2, blank=True)),
                ('nrcertobito', models.CharField(max_length=32, null=True, blank=True)),
                ('nrproctrab', models.CharField(max_length=20, null=True, blank=True)),
                ('indcumprparc', models.IntegerField(choices=[(0, '0 - Cumprimento total'), (1, '1 - Cumprimento parcial em raz\xe3o de obten\xe7\xe3o de novo emprego pelo empregado'), (2, '2 - Cumprimento parcial por iniciativa do empregador'), (3, '3 - Outras hip\xf3teses de cumprimento parcial do aviso pr\xe9vio'), (4, '4 - Aviso pr\xe9vio indenizado ou n\xe3o exig\xedvel')])),
                ('qtddiasinterm', models.IntegerField(null=True, blank=True)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2299evtdeslig_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2299evtdeslig_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2299evtdeslig_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2299evtdeslig_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'matricula', 'mtvdeslig', 'dtdeslig', 'indpagtoapi', 'dtprojfimapi', 'pensalim', 'percaliment', 'vralim', 'nrcertobito', 'nrproctrab', 'indcumprparc', 'qtddiasinterm'],
                'db_table': 's2299_evtdeslig',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2300evtTSVInicio',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('nmtrab', models.CharField(max_length=70)),
                ('sexo', models.CharField(max_length=1, choices=[(b'F', 'F - Feminino'), (b'M', 'M - Masculino')])),
                ('racacor', models.IntegerField(choices=[(1, '1 - Branca'), (2, '2 - Negra'), (3, '3 - Parda (parda ou declarada como mulata, cabocla, cafuza, mameluca ou mesti\xe7a de negro com pessoa de outra cor ou ra\xe7a)'), (4, '4 - Amarela (de origem japonesa, chinesa, coreana etc)'), (5, '5 - Ind\xedgena'), (6, '6 - N\xe3o informado')])),
                ('estciv', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Solteiro'), (2, '2 - Casado'), (3, '3 - Divorciado'), (4, '4 - Separado'), (5, '5 - Vi\xfavo')])),
                ('grauinstr', models.CharField(max_length=2, choices=[(b'01', '01 - Analfabeto, inclusive o que, embora tenha recebido instru\xe7\xe3o, n\xe3o se alfabetizou'), (b'02', '02 - At\xe9 o 5\xba ano incompleto do Ensino Fundamental (antiga 4\xaa s\xe9rie) ou que se tenha alfabetizado sem ter frequentado escola regular'), (b'03', '03 - 5\xba ano completo do Ensino Fundamental'), (b'04', '04 - Do 6\xba ao 9\xba ano do Ensino Fundamental incompleto (antiga 5\xaa a 8\xaa s\xe9rie)'), (b'05', '05 - Ensino Fundamental Completo'), (b'06', '06 - Ensino M\xe9dio incompleto'), (b'07', '07 - Ensino M\xe9dio completo'), (b'08', '08 - Educa\xe7\xe3o Superior incompleta'), (b'09', '09 - Educa\xe7\xe3o Superior completa'), (b'10', '10 - P\xf3s-Gradua\xe7\xe3o completa'), (b'11', '11 - Mestrado completo'), (b'12', '12 - Doutorado completo')])),
                ('nmsoc', models.CharField(max_length=70, null=True, blank=True)),
                ('dtnascto', models.DateField()),
                ('codmunic', models.TextField(max_length=7, null=True, blank=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True, choices=[(b'AC', 'Acre'), (b'AL', 'Alagoas'), (b'AM', 'Amazonas'), (b'AP', 'Amap\xe1'), (b'BA', 'Bahia'), (b'CE', 'Cear\xe1'), (b'DF', 'Distrito Federal'), (b'ES', 'Esp\xedrito Santo'), (b'GO', 'Goi\xe1s'), (b'MA', 'Maranh\xe3o'), (b'MG', 'Minas Gerais'), (b'MS', 'Mato Grosso do Sul'), (b'MT', 'Mato Grosso'), (b'PA', 'Par\xe1'), (b'PB', 'Para\xedba'), (b'PE', 'Pernambuco'), (b'PI', 'Piau\xed'), (b'PR', 'Paran\xe1'), (b'RJ', 'Rio de Janeiro'), (b'RN', 'Rio Grande do Norte'), (b'RO', 'Rond\xf4nia'), (b'RR', 'Roraima'), (b'RS', 'Rio Grande do Sul'), (b'SC', 'Santa Catarina'), (b'SE', 'Sergipe'), (b'SP', 'S\xe3o Paulo'), (b'TO', 'Tocantins')])),
                ('paisnascto', models.CharField(max_length=3, choices=[(b'008', '008 - Abu Dhabi'), (b'009', '009 - Dirce'), (b'013', '013 - Afeganistao'), (b'017', '017 - Albania, Republica Da'), (b'020', '020 - Alboran-Perejil,Ilhas'), (b'023', '023 - Alemanha'), (b'025', '025 - Alemanha, Republica Democratica'), (b'031', '031 - Burkina Faso'), (b'037', '037 - Andorra'), (b'040', '040 - Angola'), (b'041', '041 - Anguilla'), (b'043', '043 - Antigua E Barbuda'), (b'047', '047 - Antilhas Holandesas'), (b'053', '053 - Arabia Saudita'), (b'059', '059 - Argelia'), (b'063', '063 - Argentina'), (b'064', '064 - Armenia, Republica Da'), (b'065', '065 - Aruba'), (b'069', '069 - Australia'), (b'072', '072 - Austria'), (b'073', '073 - Azerbaijao, Republica Do'), (b'077', '077 - Bahamas, Ilhas'), (b'080', '080 - Bahrein, Ilhas'), (b'081', '081 - Bangladesh'), (b'083', '083 - Barbados'), (b'085', '085 - Belarus, Republica Da'), (b'087', '087 - Belgica'), (b'088', '088 - Belize'), (b'090', '090 - Bermudas'), (b'093', '093 - Mianmar (BIRMANIA)'), (b'097', '097 - Bolivia, Estado Plurinacional Da'), (b'098', '098 - Bosnia-Herzegovina (REPUBLICA Da)'), (b'100', '100 - Int.Z.F.Manaus'), (b'101', '101 - Botsuana'), (b'105', '105 - Brasil'), (b'106', '106 - Fretado P/Brasil'), (b'108', '108 - Brunei'), (b'111', '111 - Bulgaria, Republica Da'), (b'115', '115 - Burundi'), (b'119', '119 - Butao'), (b'127', '127 - Cabo Verde, Republica De'), (b'131', '131 - Cachemira'), (b'137', '137 - Cayman, Ilhas'), (b'141', '141 - Camboja'), (b'145', '145 - Camaroes'), (b'149', '149 - Canada'), (b'150', '150 - Jersey, Ilha Do Canal'), (b'151', '151 - Canarias, Ilhas'), (b'152', '152 - Canal,Ilhas'), (b'153', '153 - Cazaquistao, Republica Do'), (b'154', '154 - Catar'), (b'158', '158 - Chile'), (b'160', '160 - China, Republica Popular'), (b'161', '161 - Formosa (TAIWAN)'), (b'163', '163 - Chipre'), (b'165', '165 - Cocos(Keeling),Ilhas'), (b'169', '169 - Colombia'), (b'173', '173 - Comores, Ilhas'), (b'177', '177 - Congo'), (b'183', '183 - Cook, Ilhas'), (b'187', '187 - Coreia (DO Norte), Rep.Pop.Democratica'), (b'190', '190 - Coreia (DO Sul), Republica Da'), (b'193', '193 - Costa Do Marfim'), (b'195', '195 - Croacia (REPUBLICA Da)'), (b'196', '196 - Costa Rica'), (b'198', '198 - Coveite'), (b'199', '199 - Cuba'), (b'229', '229 - Benin'), (b'232', '232 - Dinamarca'), (b'235', '235 - Dominica,Ilha'), (b'237', '237 - Dubai'), (b'239', '239 - Equador'), (b'240', '240 - Egito'), (b'243', '243 - Eritreia'), (b'244', '244 - Emirados Arabes Unidos'), (b'245', '245 - Espanha'), (b'246', '246 - Eslovenia, Republica Da'), (b'247', '247 - Eslovaca, Republica'), (b'249', '249 - Estados Unidos'), (b'251', '251 - Estonia, Republica Da'), (b'253', '253 - Etiopia'), (b'255', '255 - Falkland (ILHAS Malvinas)'), (b'259', '259 - Feroe, Ilhas'), (b'263', '263 - Fezzan'), (b'267', '267 - Filipinas'), (b'271', '271 - Finlandia'), (b'275', '275 - Franca'), (b'281', '281 - Gabao'), (b'285', '285 - Gambia'), (b'289', '289 - Gana'), (b'291', '291 - Georgia, Republica Da'), (b'293', '293 - Gibraltar'), (b'297', '297 - Granada'), (b'301', '301 - Grecia'), (b'305', '305 - Groenlandia'), (b'309', '309 - Guadalupe'), (b'313', '313 - Guam'), (b'317', '317 - Guatemala'), (b'325', '325 - Guiana Francesa'), (b'329', '329 - Guine'), (b'331', '331 - Guine-Equatorial'), (b'334', '334 - Guine-Bissau'), (b'337', '337 - Guiana'), (b'341', '341 - Haiti'), (b'345', '345 - Honduras'), (b'351', '351 - Hong Kong'), (b'355', '355 - Hungria, Republica Da'), (b'357', '357 - Iemen'), (b'358', '358 - Iemem Do Sul'), (b'359', '359 - Man, Ilha De'), (b'361', '361 - India'), (b'365', '365 - Indonesia'), (b'367', '367 - Inglaterra'), (b'369', '369 - Iraque'), (b'372', '372 - Ira, Republica Islamica Do'), (b'375', '375 - Irlanda'), (b'379', '379 - Islandia'), (b'383', '383 - Israel'), (b'386', '386 - Italia'), (b'388', '388 - Servia E Montenegro'), (b'391', '391 - Jamaica'), (b'395', '395 - Jammu'), (b'396', '396 - Johnston, Ilhas'), (b'399', '399 - Japao'), (b'403', '403 - Jordania'), (b'411', '411 - Kiribati'), (b'420', '420 - Laos, Rep.Pop.Democr.Do'), (b'423', '423 - Lebuan,Ilhas'), (b'426', '426 - Lesoto'), (b'427', '427 - Letonia, Republica Da'), (b'431', '431 - Libano'), (b'434', '434 - Liberia'), (b'438', '438 - Libia'), (b'440', '440 - Liechtenstein'), (b'442', '442 - Lituania, Republica Da'), (b'445', '445 - Luxemburgo'), (b'447', '447 - Macau'), (b'449', '449 - Macedonia, Ant.Rep.Iugoslava'), (b'450', '450 - Madagascar'), (b'452', '452 - Ilha Da Madeira'), (b'455', '455 - Malasia'), (b'458', '458 - Malavi'), (b'461', '461 - Maldivas'), (b'464', '464 - Mali'), (b'467', '467 - Malta'), (b'472', '472 - Marianas Do Norte'), (b'474', '474 - Marrocos'), (b'476', '476 - Marshall,Ilhas'), (b'477', '477 - Martinica'), (b'485', '485 - Mauricio'), (b'488', '488 - Mauritania'), (b'490', '490 - Midway, Ilhas'), (b'493', '493 - Mexico'), (b'494', '494 - Moldavia, Republica Da'), (b'495', '495 - Monaco'), (b'497', '497 - Mongolia'), (b'499', '499 - Micronesia'), (b'501', '501 - Montserrat,Ilhas'), (b'505', '505 - Mocambique'), (b'507', '507 - Namibia'), (b'508', '508 - Nauru'), (b'511', '511 - Christmas,Ilha (NAVIDAD)'), (b'517', '517 - Nepal'), (b'521', '521 - Nicaragua'), (b'525', '525 - Niger'), (b'528', '528 - Nigeria'), (b'531', '531 - Niue,Ilha'), (b'535', '535 - Norfolk,Ilha'), (b'538', '538 - Noruega'), (b'542', '542 - Nova Caledonia'), (b'545', '545 - Papua Nova Guine'), (b'548', '548 - Nova Zelandia'), (b'551', '551 - Vanuatu'), (b'556', '556 - Oma'), (b'563', '563 - Pacifico,Ilhas Do (ADMINISTRACAO Dos Eua)'), (b'566', '566 - Pacifico,Ilhas Do (POSSESSAO Dos Eua)'), (b'569', '569 - Pacifico,Ilhas Do (TERRITORIO Em Fideicomisso Dos'), (b'573', '573 - Paises Baixos (HOLANDA)'), (b'575', '575 - Palau'), (b'576', '576 - Paquistao'), (b'578', '578 - Palestina'), (b'580', '580 - Panama'), (b'583', '583 - Papua Nova Guin\xe9'), (b'586', '586 - Paraguai'), (b'589', '589 - Peru'), (b'593', '593 - Pitcairn,Ilha'), (b'599', '599 - Polinesia Francesa'), (b'603', '603 - Polonia, Republica Da'), (b'607', '607 - Portugal'), (b'611', '611 - Porto Rico'), (b'623', '623 - Quenia'), (b'625', '625 - Quirguiz, Republica'), (b'628', '628 - Reino Unido'), (b'640', '640 - Republica Centro-Africana'), (b'647', '647 - Republica Dominicana'), (b'660', '660 - Reuniao, Ilha'), (b'665', '665 - Zimbabue'), (b'670', '670 - Romenia'), (b'675', '675 - Ruanda'), (b'676', '676 - Russia, Federacao Da'), (b'677', '677 - Salomao, Ilhas'), (b'678', '678 - Saint Kitts E Nevis'), (b'685', '685 - Saara Ocidental'), (b'687', '687 - El Salvador'), (b'690', '690 - Samoa'), (b'691', '691 - Samoa Americana'), (b'695', '695 - Sao Cristovao E Neves,Ilhas'), (b'697', '697 - San Marino'), (b'700', '700 - Sao Pedro E Miquelon'), (b'705', '705 - Sao Vicente E Granadinas'), (b'710', '710 - Santa Helena'), (b'715', '715 - Santa Lucia'), (b'720', '720 - Sao Tome E Principe, Ilhas'), (b'728', '728 - Senegal'), (b'731', '731 - Seychelles'), (b'735', '735 - Serra Leoa'), (b'738', '738 - Sikkim'), (b'741', '741 - Cingapura'), (b'744', '744 - Siria, Republica Arabe Da'), (b'748', '748 - Somalia'), (b'750', '750 - Sri Lanka'), (b'754', '754 - Suazilandia'), (b'756', '756 - Africa Do Sul'), (b'759', '759 - Sudao'), (b'764', '764 - Suecia'), (b'767', '767 - Suica'), (b'770', '770 - Suriname'), (b'772', '772 - Tadjiquistao, Republica Do'), (b'776', '776 - Tailandia'), (b'780', '780 - Tanzania, Rep.Unida Da'), (b'782', '782 - Territorio Brit.Oc.Indico'), (b'783', '783 - Djibuti'), (b'785', '785 - Territorio da Alta Comissao do Pacifico Ocidental'), (b'788', '788 - Chade'), (b'790', '790 - Tchecoslovaquia'), (b'791', '791 - Tcheca, Republica'), (b'795', '795 - Timor Leste'), (b'800', '800 - Togo'), (b'805', '805 - Toquelau,Ilhas'), (b'810', '810 - Tonga'), (b'815', '815 - Trinidad E Tobago'), (b'820', '820 - Tunisia'), (b'823', '823 - Turcas E Caicos,Ilhas'), (b'824', '824 - Turcomenistao, Republica Do'), (b'827', '827 - Turquia'), (b'828', '828 - Tuvalu'), (b'831', '831 - Ucrania'), (b'833', '833 - Uganda'), (b'840', '840 - Uniao Das Republicas Socialistas Sovieticas'), (b'845', '845 - Uruguai'), (b'847', '847 - Uzbequistao, Republica Do'), (b'848', '848 - Vaticano, Est.Da Cidade Do'), (b'850', '850 - Venezuela'), (b'855', '855 - Vietname Norte'), (b'858', '858 - Vietna'), (b'863', '863 - Virgens,Ilhas (BRITANICAS)'), (b'866', '866 - Virgens,Ilhas (E.U.A.)'), (b'870', '870 - Fiji'), (b'873', '873 - Wake, Ilha'), (b'875', '875 - Wallis E Futuna, Ilhas'), (b'888', '888 - Congo, Republica Democratica Do'), (b'890', '890 - Zambia')])),
                ('paisnac', models.CharField(max_length=3, choices=[(b'008', '008 - Abu Dhabi'), (b'009', '009 - Dirce'), (b'013', '013 - Afeganistao'), (b'017', '017 - Albania, Republica Da'), (b'020', '020 - Alboran-Perejil,Ilhas'), (b'023', '023 - Alemanha'), (b'025', '025 - Alemanha, Republica Democratica'), (b'031', '031 - Burkina Faso'), (b'037', '037 - Andorra'), (b'040', '040 - Angola'), (b'041', '041 - Anguilla'), (b'043', '043 - Antigua E Barbuda'), (b'047', '047 - Antilhas Holandesas'), (b'053', '053 - Arabia Saudita'), (b'059', '059 - Argelia'), (b'063', '063 - Argentina'), (b'064', '064 - Armenia, Republica Da'), (b'065', '065 - Aruba'), (b'069', '069 - Australia'), (b'072', '072 - Austria'), (b'073', '073 - Azerbaijao, Republica Do'), (b'077', '077 - Bahamas, Ilhas'), (b'080', '080 - Bahrein, Ilhas'), (b'081', '081 - Bangladesh'), (b'083', '083 - Barbados'), (b'085', '085 - Belarus, Republica Da'), (b'087', '087 - Belgica'), (b'088', '088 - Belize'), (b'090', '090 - Bermudas'), (b'093', '093 - Mianmar (BIRMANIA)'), (b'097', '097 - Bolivia, Estado Plurinacional Da'), (b'098', '098 - Bosnia-Herzegovina (REPUBLICA Da)'), (b'100', '100 - Int.Z.F.Manaus'), (b'101', '101 - Botsuana'), (b'105', '105 - Brasil'), (b'106', '106 - Fretado P/Brasil'), (b'108', '108 - Brunei'), (b'111', '111 - Bulgaria, Republica Da'), (b'115', '115 - Burundi'), (b'119', '119 - Butao'), (b'127', '127 - Cabo Verde, Republica De'), (b'131', '131 - Cachemira'), (b'137', '137 - Cayman, Ilhas'), (b'141', '141 - Camboja'), (b'145', '145 - Camaroes'), (b'149', '149 - Canada'), (b'150', '150 - Jersey, Ilha Do Canal'), (b'151', '151 - Canarias, Ilhas'), (b'152', '152 - Canal,Ilhas'), (b'153', '153 - Cazaquistao, Republica Do'), (b'154', '154 - Catar'), (b'158', '158 - Chile'), (b'160', '160 - China, Republica Popular'), (b'161', '161 - Formosa (TAIWAN)'), (b'163', '163 - Chipre'), (b'165', '165 - Cocos(Keeling),Ilhas'), (b'169', '169 - Colombia'), (b'173', '173 - Comores, Ilhas'), (b'177', '177 - Congo'), (b'183', '183 - Cook, Ilhas'), (b'187', '187 - Coreia (DO Norte), Rep.Pop.Democratica'), (b'190', '190 - Coreia (DO Sul), Republica Da'), (b'193', '193 - Costa Do Marfim'), (b'195', '195 - Croacia (REPUBLICA Da)'), (b'196', '196 - Costa Rica'), (b'198', '198 - Coveite'), (b'199', '199 - Cuba'), (b'229', '229 - Benin'), (b'232', '232 - Dinamarca'), (b'235', '235 - Dominica,Ilha'), (b'237', '237 - Dubai'), (b'239', '239 - Equador'), (b'240', '240 - Egito'), (b'243', '243 - Eritreia'), (b'244', '244 - Emirados Arabes Unidos'), (b'245', '245 - Espanha'), (b'246', '246 - Eslovenia, Republica Da'), (b'247', '247 - Eslovaca, Republica'), (b'249', '249 - Estados Unidos'), (b'251', '251 - Estonia, Republica Da'), (b'253', '253 - Etiopia'), (b'255', '255 - Falkland (ILHAS Malvinas)'), (b'259', '259 - Feroe, Ilhas'), (b'263', '263 - Fezzan'), (b'267', '267 - Filipinas'), (b'271', '271 - Finlandia'), (b'275', '275 - Franca'), (b'281', '281 - Gabao'), (b'285', '285 - Gambia'), (b'289', '289 - Gana'), (b'291', '291 - Georgia, Republica Da'), (b'293', '293 - Gibraltar'), (b'297', '297 - Granada'), (b'301', '301 - Grecia'), (b'305', '305 - Groenlandia'), (b'309', '309 - Guadalupe'), (b'313', '313 - Guam'), (b'317', '317 - Guatemala'), (b'325', '325 - Guiana Francesa'), (b'329', '329 - Guine'), (b'331', '331 - Guine-Equatorial'), (b'334', '334 - Guine-Bissau'), (b'337', '337 - Guiana'), (b'341', '341 - Haiti'), (b'345', '345 - Honduras'), (b'351', '351 - Hong Kong'), (b'355', '355 - Hungria, Republica Da'), (b'357', '357 - Iemen'), (b'358', '358 - Iemem Do Sul'), (b'359', '359 - Man, Ilha De'), (b'361', '361 - India'), (b'365', '365 - Indonesia'), (b'367', '367 - Inglaterra'), (b'369', '369 - Iraque'), (b'372', '372 - Ira, Republica Islamica Do'), (b'375', '375 - Irlanda'), (b'379', '379 - Islandia'), (b'383', '383 - Israel'), (b'386', '386 - Italia'), (b'388', '388 - Servia E Montenegro'), (b'391', '391 - Jamaica'), (b'395', '395 - Jammu'), (b'396', '396 - Johnston, Ilhas'), (b'399', '399 - Japao'), (b'403', '403 - Jordania'), (b'411', '411 - Kiribati'), (b'420', '420 - Laos, Rep.Pop.Democr.Do'), (b'423', '423 - Lebuan,Ilhas'), (b'426', '426 - Lesoto'), (b'427', '427 - Letonia, Republica Da'), (b'431', '431 - Libano'), (b'434', '434 - Liberia'), (b'438', '438 - Libia'), (b'440', '440 - Liechtenstein'), (b'442', '442 - Lituania, Republica Da'), (b'445', '445 - Luxemburgo'), (b'447', '447 - Macau'), (b'449', '449 - Macedonia, Ant.Rep.Iugoslava'), (b'450', '450 - Madagascar'), (b'452', '452 - Ilha Da Madeira'), (b'455', '455 - Malasia'), (b'458', '458 - Malavi'), (b'461', '461 - Maldivas'), (b'464', '464 - Mali'), (b'467', '467 - Malta'), (b'472', '472 - Marianas Do Norte'), (b'474', '474 - Marrocos'), (b'476', '476 - Marshall,Ilhas'), (b'477', '477 - Martinica'), (b'485', '485 - Mauricio'), (b'488', '488 - Mauritania'), (b'490', '490 - Midway, Ilhas'), (b'493', '493 - Mexico'), (b'494', '494 - Moldavia, Republica Da'), (b'495', '495 - Monaco'), (b'497', '497 - Mongolia'), (b'499', '499 - Micronesia'), (b'501', '501 - Montserrat,Ilhas'), (b'505', '505 - Mocambique'), (b'507', '507 - Namibia'), (b'508', '508 - Nauru'), (b'511', '511 - Christmas,Ilha (NAVIDAD)'), (b'517', '517 - Nepal'), (b'521', '521 - Nicaragua'), (b'525', '525 - Niger'), (b'528', '528 - Nigeria'), (b'531', '531 - Niue,Ilha'), (b'535', '535 - Norfolk,Ilha'), (b'538', '538 - Noruega'), (b'542', '542 - Nova Caledonia'), (b'545', '545 - Papua Nova Guine'), (b'548', '548 - Nova Zelandia'), (b'551', '551 - Vanuatu'), (b'556', '556 - Oma'), (b'563', '563 - Pacifico,Ilhas Do (ADMINISTRACAO Dos Eua)'), (b'566', '566 - Pacifico,Ilhas Do (POSSESSAO Dos Eua)'), (b'569', '569 - Pacifico,Ilhas Do (TERRITORIO Em Fideicomisso Dos'), (b'573', '573 - Paises Baixos (HOLANDA)'), (b'575', '575 - Palau'), (b'576', '576 - Paquistao'), (b'578', '578 - Palestina'), (b'580', '580 - Panama'), (b'583', '583 - Papua Nova Guin\xe9'), (b'586', '586 - Paraguai'), (b'589', '589 - Peru'), (b'593', '593 - Pitcairn,Ilha'), (b'599', '599 - Polinesia Francesa'), (b'603', '603 - Polonia, Republica Da'), (b'607', '607 - Portugal'), (b'611', '611 - Porto Rico'), (b'623', '623 - Quenia'), (b'625', '625 - Quirguiz, Republica'), (b'628', '628 - Reino Unido'), (b'640', '640 - Republica Centro-Africana'), (b'647', '647 - Republica Dominicana'), (b'660', '660 - Reuniao, Ilha'), (b'665', '665 - Zimbabue'), (b'670', '670 - Romenia'), (b'675', '675 - Ruanda'), (b'676', '676 - Russia, Federacao Da'), (b'677', '677 - Salomao, Ilhas'), (b'678', '678 - Saint Kitts E Nevis'), (b'685', '685 - Saara Ocidental'), (b'687', '687 - El Salvador'), (b'690', '690 - Samoa'), (b'691', '691 - Samoa Americana'), (b'695', '695 - Sao Cristovao E Neves,Ilhas'), (b'697', '697 - San Marino'), (b'700', '700 - Sao Pedro E Miquelon'), (b'705', '705 - Sao Vicente E Granadinas'), (b'710', '710 - Santa Helena'), (b'715', '715 - Santa Lucia'), (b'720', '720 - Sao Tome E Principe, Ilhas'), (b'728', '728 - Senegal'), (b'731', '731 - Seychelles'), (b'735', '735 - Serra Leoa'), (b'738', '738 - Sikkim'), (b'741', '741 - Cingapura'), (b'744', '744 - Siria, Republica Arabe Da'), (b'748', '748 - Somalia'), (b'750', '750 - Sri Lanka'), (b'754', '754 - Suazilandia'), (b'756', '756 - Africa Do Sul'), (b'759', '759 - Sudao'), (b'764', '764 - Suecia'), (b'767', '767 - Suica'), (b'770', '770 - Suriname'), (b'772', '772 - Tadjiquistao, Republica Do'), (b'776', '776 - Tailandia'), (b'780', '780 - Tanzania, Rep.Unida Da'), (b'782', '782 - Territorio Brit.Oc.Indico'), (b'783', '783 - Djibuti'), (b'785', '785 - Territorio da Alta Comissao do Pacifico Ocidental'), (b'788', '788 - Chade'), (b'790', '790 - Tchecoslovaquia'), (b'791', '791 - Tcheca, Republica'), (b'795', '795 - Timor Leste'), (b'800', '800 - Togo'), (b'805', '805 - Toquelau,Ilhas'), (b'810', '810 - Tonga'), (b'815', '815 - Trinidad E Tobago'), (b'820', '820 - Tunisia'), (b'823', '823 - Turcas E Caicos,Ilhas'), (b'824', '824 - Turcomenistao, Republica Do'), (b'827', '827 - Turquia'), (b'828', '828 - Tuvalu'), (b'831', '831 - Ucrania'), (b'833', '833 - Uganda'), (b'840', '840 - Uniao Das Republicas Socialistas Sovieticas'), (b'845', '845 - Uruguai'), (b'847', '847 - Uzbequistao, Republica Do'), (b'848', '848 - Vaticano, Est.Da Cidade Do'), (b'850', '850 - Venezuela'), (b'855', '855 - Vietname Norte'), (b'858', '858 - Vietna'), (b'863', '863 - Virgens,Ilhas (BRITANICAS)'), (b'866', '866 - Virgens,Ilhas (E.U.A.)'), (b'870', '870 - Fiji'), (b'873', '873 - Wake, Ilha'), (b'875', '875 - Wallis E Futuna, Ilhas'), (b'888', '888 - Congo, Republica Democratica Do'), (b'890', '890 - Zambia')])),
                ('nmmae', models.CharField(max_length=70, null=True, blank=True)),
                ('nmpai', models.CharField(max_length=70, null=True, blank=True)),
                ('cadini', models.CharField(max_length=1, choices=[(b'N', 'N - N\xe3o'), (b'S', 'S - Sim')])),
                ('codcateg', models.IntegerField(choices=[(101, '101 - Empregado - Geral, inclusive o empregado p\xfablico da administra\xe7\xe3o direta ou indireta contratado pela CLT.'), (102, '102 - Empregado - Trabalhador Rural por Pequeno Prazo da Lei 11.718/2008'), (103, '103 - Empregado - Aprendiz'), (104, '104 - Empregado - Dom\xe9stico'), (105, '105 - Empregado - contrato a termo firmado nos termos da Lei 9601/98'), (106, '106 - Trabalhador Tempor\xe1rio - contrato por prazo determinado nos termos da Lei 6019/74'), (111, '111 - Empregado - contrato de trabalho intermitente'), (201, '201 - Trabalhador Avulso Portu\xe1rio'), (202, '202 - Trabalhador Avulso N\xe3o Portu\xe1rio'), (301, '301 - Servidor P\xfablico Titular de Cargo Efetivo, Magistrado, Ministro de Tribunal de Contas, Conselheiro de Tribunal de Contas e Membro do Minist\xe9rio P\xfablico'), (302, '302 - Servidor P\xfablico Ocupante de Cargo exclusivo em comiss\xe3o'), (303, '303 - Agente Pol\xedtico'), (305, '305 - Servidor P\xfablico indicado para conselho ou \xf3rg\xe3o deliberativo, na condi\xe7\xe3o de representante do governo, \xf3rg\xe3o ou entidade da administra\xe7\xe3o p\xfablica.'), (306, '306 - Servidor P\xfablico Tempor\xe1rio, sujeito a regime administrativo especial definido em lei pr\xf3pria'), (307, '307 - Militar efetivo'), (308, '308 - Conscrito'), (309, '309 - Agente P\xfablico - Outros'), (401, '401 - Dirigente Sindical - informa\xe7\xe3o prestada pelo Sindicato'), (410, '410 - Trabalhador cedido - informa\xe7\xe3o prestada pelo Cession\xe1rio'), (701, '701 - Contribuinte individual - Aut\xf4nomo em geral, exceto se enquadrado em uma das demais categorias de contribuinte individual'), (711, '711 - Contribuinte individual - Transportador aut\xf4nomo de passageiros'), (712, '712 - Contribuinte individual - Transportador aut\xf4nomo de carga'), (721, '721 - Contribuinte individual - Diretor n\xe3o empregado, com FGTS'), (722, '722 - Contribuinte individual - Diretor n\xe3o empregado, sem FGTS'), (723, '723 - Contribuinte individual - empres\xe1rios, s\xf3cios e membro de conselho de administra\xe7\xe3o ou fiscal'), (731, '731 - Contribuinte individual - Cooperado que presta servi\xe7os por interm\xe9dio de Cooperativa de Trabalho'), (734, '734 - Contribuinte individual - Transportador Cooperado que presta servi\xe7os por interm\xe9dio de cooperativa de trabalho'), (738, '738 - Contribuinte individual - Cooperado filiado a Cooperativa de Produ\xe7\xe3o'), (741, '741 - Contribuinte individual - Microempreendedor Individual'), (751, '751 - Contribuinte individual - magistrado classista tempor\xe1rio da Justi\xe7a do Trabalho ou da Justi\xe7a Eleitoral que seja aposentado de qualquer regime previdenci\xe1rio'), (761, '761 - Contribuinte individual - Associado eleito para dire\xe7\xe3o de Cooperativa, associa\xe7\xe3o ou entidade de classe de qualquer natureza ou finalidade, bem como o s\xedndico ou administrador eleito para exercer atividade de dire\xe7\xe3o condominial, desde que recebam r (...)'), (771, '771 - Contribuinte individual - Membro de conselho tutelar, nos termos da Lei n\xba 8.069, de 13 de julho de 1990'), (781, '781 - Ministro de confiss\xe3o religiosa ou membro de vida consagrada, de congrega\xe7\xe3o ou de ordem religiosa'), (901, '901 - Estagi\xe1rio'), (902, '902 - M\xe9dico Residente'), (903, '903 - Bolsista, nos termos da lei 8958/1994'), (904, '904 - Participante de curso de forma\xe7\xe3o, como etapa de concurso p\xfablico, sem v\xednculo de emprego/estatut\xe1rio'), (905, '905 - Atleta n\xe3o profissional em forma\xe7\xe3o que receba bolsa')])),
                ('dtinicio', models.DateField()),
                ('natatividade', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Trabalho Urbano'), (2, '2 - Trabalho Rural')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2300evttsvinicio_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2300evttsvinicio_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2300evttsvinicio_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2300evttsvinicio_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'nmtrab', 'sexo', 'racacor', 'estciv', 'grauinstr', 'nmsoc', 'dtnascto', 'codmunic', 'uf', 'paisnascto', 'paisnac', 'nmmae', 'nmpai', 'cadini', 'codcateg', 'dtinicio', 'natatividade'],
                'db_table': 's2300_evttsvinicio',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2306evtTSVAltContr',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('codcateg', models.IntegerField(choices=[(101, '101 - Empregado - Geral, inclusive o empregado p\xfablico da administra\xe7\xe3o direta ou indireta contratado pela CLT.'), (102, '102 - Empregado - Trabalhador Rural por Pequeno Prazo da Lei 11.718/2008'), (103, '103 - Empregado - Aprendiz'), (104, '104 - Empregado - Dom\xe9stico'), (105, '105 - Empregado - contrato a termo firmado nos termos da Lei 9601/98'), (106, '106 - Trabalhador Tempor\xe1rio - contrato por prazo determinado nos termos da Lei 6019/74'), (111, '111 - Empregado - contrato de trabalho intermitente'), (201, '201 - Trabalhador Avulso Portu\xe1rio'), (202, '202 - Trabalhador Avulso N\xe3o Portu\xe1rio'), (301, '301 - Servidor P\xfablico Titular de Cargo Efetivo, Magistrado, Ministro de Tribunal de Contas, Conselheiro de Tribunal de Contas e Membro do Minist\xe9rio P\xfablico'), (302, '302 - Servidor P\xfablico Ocupante de Cargo exclusivo em comiss\xe3o'), (303, '303 - Agente Pol\xedtico'), (305, '305 - Servidor P\xfablico indicado para conselho ou \xf3rg\xe3o deliberativo, na condi\xe7\xe3o de representante do governo, \xf3rg\xe3o ou entidade da administra\xe7\xe3o p\xfablica.'), (306, '306 - Servidor P\xfablico Tempor\xe1rio, sujeito a regime administrativo especial definido em lei pr\xf3pria'), (307, '307 - Militar efetivo'), (308, '308 - Conscrito'), (309, '309 - Agente P\xfablico - Outros'), (401, '401 - Dirigente Sindical - informa\xe7\xe3o prestada pelo Sindicato'), (410, '410 - Trabalhador cedido - informa\xe7\xe3o prestada pelo Cession\xe1rio'), (701, '701 - Contribuinte individual - Aut\xf4nomo em geral, exceto se enquadrado em uma das demais categorias de contribuinte individual'), (711, '711 - Contribuinte individual - Transportador aut\xf4nomo de passageiros'), (712, '712 - Contribuinte individual - Transportador aut\xf4nomo de carga'), (721, '721 - Contribuinte individual - Diretor n\xe3o empregado, com FGTS'), (722, '722 - Contribuinte individual - Diretor n\xe3o empregado, sem FGTS'), (723, '723 - Contribuinte individual - empres\xe1rios, s\xf3cios e membro de conselho de administra\xe7\xe3o ou fiscal'), (731, '731 - Contribuinte individual - Cooperado que presta servi\xe7os por interm\xe9dio de Cooperativa de Trabalho'), (734, '734 - Contribuinte individual - Transportador Cooperado que presta servi\xe7os por interm\xe9dio de cooperativa de trabalho'), (738, '738 - Contribuinte individual - Cooperado filiado a Cooperativa de Produ\xe7\xe3o'), (741, '741 - Contribuinte individual - Microempreendedor Individual'), (751, '751 - Contribuinte individual - magistrado classista tempor\xe1rio da Justi\xe7a do Trabalho ou da Justi\xe7a Eleitoral que seja aposentado de qualquer regime previdenci\xe1rio'), (761, '761 - Contribuinte individual - Associado eleito para dire\xe7\xe3o de Cooperativa, associa\xe7\xe3o ou entidade de classe de qualquer natureza ou finalidade, bem como o s\xedndico ou administrador eleito para exercer atividade de dire\xe7\xe3o condominial, desde que recebam r (...)'), (771, '771 - Contribuinte individual - Membro de conselho tutelar, nos termos da Lei n\xba 8.069, de 13 de julho de 1990'), (781, '781 - Ministro de confiss\xe3o religiosa ou membro de vida consagrada, de congrega\xe7\xe3o ou de ordem religiosa'), (901, '901 - Estagi\xe1rio'), (902, '902 - M\xe9dico Residente'), (903, '903 - Bolsista, nos termos da lei 8958/1994'), (904, '904 - Participante de curso de forma\xe7\xe3o, como etapa de concurso p\xfablico, sem v\xednculo de emprego/estatut\xe1rio'), (905, '905 - Atleta n\xe3o profissional em forma\xe7\xe3o que receba bolsa')])),
                ('dtalteracao', models.DateField()),
                ('natatividade', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Trabalho Urbano'), (2, '2 - Trabalho Rural')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2306evttsvaltcontr_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2306evttsvaltcontr_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2306evttsvaltcontr_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2306evttsvaltcontr_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'codcateg', 'dtalteracao', 'natatividade'],
                'db_table': 's2306_evttsvaltcontr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2399evtTSVTermino',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('nistrab', models.CharField(max_length=11, null=True, blank=True)),
                ('codcateg', models.IntegerField(choices=[(101, '101 - Empregado - Geral, inclusive o empregado p\xfablico da administra\xe7\xe3o direta ou indireta contratado pela CLT.'), (102, '102 - Empregado - Trabalhador Rural por Pequeno Prazo da Lei 11.718/2008'), (103, '103 - Empregado - Aprendiz'), (104, '104 - Empregado - Dom\xe9stico'), (105, '105 - Empregado - contrato a termo firmado nos termos da Lei 9601/98'), (106, '106 - Trabalhador Tempor\xe1rio - contrato por prazo determinado nos termos da Lei 6019/74'), (111, '111 - Empregado - contrato de trabalho intermitente'), (201, '201 - Trabalhador Avulso Portu\xe1rio'), (202, '202 - Trabalhador Avulso N\xe3o Portu\xe1rio'), (301, '301 - Servidor P\xfablico Titular de Cargo Efetivo, Magistrado, Ministro de Tribunal de Contas, Conselheiro de Tribunal de Contas e Membro do Minist\xe9rio P\xfablico'), (302, '302 - Servidor P\xfablico Ocupante de Cargo exclusivo em comiss\xe3o'), (303, '303 - Agente Pol\xedtico'), (305, '305 - Servidor P\xfablico indicado para conselho ou \xf3rg\xe3o deliberativo, na condi\xe7\xe3o de representante do governo, \xf3rg\xe3o ou entidade da administra\xe7\xe3o p\xfablica.'), (306, '306 - Servidor P\xfablico Tempor\xe1rio, sujeito a regime administrativo especial definido em lei pr\xf3pria'), (307, '307 - Militar efetivo'), (308, '308 - Conscrito'), (309, '309 - Agente P\xfablico - Outros'), (401, '401 - Dirigente Sindical - informa\xe7\xe3o prestada pelo Sindicato'), (410, '410 - Trabalhador cedido - informa\xe7\xe3o prestada pelo Cession\xe1rio'), (701, '701 - Contribuinte individual - Aut\xf4nomo em geral, exceto se enquadrado em uma das demais categorias de contribuinte individual'), (711, '711 - Contribuinte individual - Transportador aut\xf4nomo de passageiros'), (712, '712 - Contribuinte individual - Transportador aut\xf4nomo de carga'), (721, '721 - Contribuinte individual - Diretor n\xe3o empregado, com FGTS'), (722, '722 - Contribuinte individual - Diretor n\xe3o empregado, sem FGTS'), (723, '723 - Contribuinte individual - empres\xe1rios, s\xf3cios e membro de conselho de administra\xe7\xe3o ou fiscal'), (731, '731 - Contribuinte individual - Cooperado que presta servi\xe7os por interm\xe9dio de Cooperativa de Trabalho'), (734, '734 - Contribuinte individual - Transportador Cooperado que presta servi\xe7os por interm\xe9dio de cooperativa de trabalho'), (738, '738 - Contribuinte individual - Cooperado filiado a Cooperativa de Produ\xe7\xe3o'), (741, '741 - Contribuinte individual - Microempreendedor Individual'), (751, '751 - Contribuinte individual - magistrado classista tempor\xe1rio da Justi\xe7a do Trabalho ou da Justi\xe7a Eleitoral que seja aposentado de qualquer regime previdenci\xe1rio'), (761, '761 - Contribuinte individual - Associado eleito para dire\xe7\xe3o de Cooperativa, associa\xe7\xe3o ou entidade de classe de qualquer natureza ou finalidade, bem como o s\xedndico ou administrador eleito para exercer atividade de dire\xe7\xe3o condominial, desde que recebam r (...)'), (771, '771 - Contribuinte individual - Membro de conselho tutelar, nos termos da Lei n\xba 8.069, de 13 de julho de 1990'), (781, '781 - Ministro de confiss\xe3o religiosa ou membro de vida consagrada, de congrega\xe7\xe3o ou de ordem religiosa'), (901, '901 - Estagi\xe1rio'), (902, '902 - M\xe9dico Residente'), (903, '903 - Bolsista, nos termos da lei 8958/1994'), (904, '904 - Participante de curso de forma\xe7\xe3o, como etapa de concurso p\xfablico, sem v\xednculo de emprego/estatut\xe1rio'), (905, '905 - Atleta n\xe3o profissional em forma\xe7\xe3o que receba bolsa')])),
                ('dtterm', models.DateField()),
                ('mtvdesligtsv', models.CharField(blank=True, max_length=2, null=True, choices=[(b'01', '01 - Exonera\xe7\xe3o do Diretor N\xe3o Empregado sem justa causa, por delibera\xe7\xe3o da assembleia, dos s\xf3cios cotistas ou da autoridade competente'), (b'02', '02 - T\xe9rmino de Mandato do Diretor N\xe3o Empregado que n\xe3o tenha sido reconduzido ao cargo'), (b'03', '03 - Exonera\xe7\xe3o a pedido de Diretor N\xe3o Empregado'), (b'04', '04 - Exonera\xe7\xe3o do Diretor N\xe3o Empregado por culpa rec\xedproca ou for\xe7a maior'), (b'05', '05 - Morte do Diretor N\xe3o Empregado'), (b'06', '06 - Exonera\xe7\xe3o do Diretor N\xe3o Empregado por fal\xeancia, encerramento ou supress\xe3o de parte da empresa'), (b'99', '99 - Outros')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s2399evttsvtermino_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2399evttsvtermino_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2399evttsvtermino_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2399evttsvtermino_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpftrab', 'nistrab', 'codcateg', 'dtterm', 'mtvdesligtsv'],
                'db_table': 's2399_evttsvtermino',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s2400evtCdBenPrRP',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indretif', models.IntegerField(choices=[(1, '1 - para arquivo original'), (2, '2 - para arquivo de retifica\xe7\xe3o')])),
                ('nrrecibo', models.CharField(max_length=40, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpfbenef', models.CharField(max_length=11)),
                ('nmbenefic', models.CharField(max_length=70)),
                ('dtnascto', models.DateField()),
                ('codmunic', models.TextField(max_length=7, null=True, blank=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True, choices=[(b'AC', 'Acre'), (b'AL', 'Alagoas'), (b'AM', 'Amazonas'), (b'AP', 'Amap\xe1'), (b'BA', 'Bahia'), (b'CE', 'Cear\xe1'), (b'DF', 'Distrito Federal'), (b'ES', 'Esp\xedrito Santo'), (b'GO', 'Goi\xe1s'), (b'MA', 'Maranh\xe3o'), (b'MG', 'Minas Gerais'), (b'MS', 'Mato Grosso do Sul'), (b'MT', 'Mato Grosso'), (b'PA', 'Par\xe1'), (b'PB', 'Para\xedba'), (b'PE', 'Pernambuco'), (b'PI', 'Piau\xed'), (b'PR', 'Paran\xe1'), (b'RJ', 'Rio de Janeiro'), (b'RN', 'Rio Grande do Norte'), (b'RO', 'Rond\xf4nia'), (b'RR', 'Roraima'), (b'RS', 'Rio Grande do Sul'), (b'SC', 'Santa Catarina'), (b'SE', 'Sergipe'), (b'SP', 'S\xe3o Paulo'), (b'TO', 'Tocantins')])),
                ('paisnascto', models.CharField(max_length=3, choices=[(b'008', '008 - Abu Dhabi'), (b'009', '009 - Dirce'), (b'013', '013 - Afeganistao'), (b'017', '017 - Albania, Republica Da'), (b'020', '020 - Alboran-Perejil,Ilhas'), (b'023', '023 - Alemanha'), (b'025', '025 - Alemanha, Republica Democratica'), (b'031', '031 - Burkina Faso'), (b'037', '037 - Andorra'), (b'040', '040 - Angola'), (b'041', '041 - Anguilla'), (b'043', '043 - Antigua E Barbuda'), (b'047', '047 - Antilhas Holandesas'), (b'053', '053 - Arabia Saudita'), (b'059', '059 - Argelia'), (b'063', '063 - Argentina'), (b'064', '064 - Armenia, Republica Da'), (b'065', '065 - Aruba'), (b'069', '069 - Australia'), (b'072', '072 - Austria'), (b'073', '073 - Azerbaijao, Republica Do'), (b'077', '077 - Bahamas, Ilhas'), (b'080', '080 - Bahrein, Ilhas'), (b'081', '081 - Bangladesh'), (b'083', '083 - Barbados'), (b'085', '085 - Belarus, Republica Da'), (b'087', '087 - Belgica'), (b'088', '088 - Belize'), (b'090', '090 - Bermudas'), (b'093', '093 - Mianmar (BIRMANIA)'), (b'097', '097 - Bolivia, Estado Plurinacional Da'), (b'098', '098 - Bosnia-Herzegovina (REPUBLICA Da)'), (b'100', '100 - Int.Z.F.Manaus'), (b'101', '101 - Botsuana'), (b'105', '105 - Brasil'), (b'106', '106 - Fretado P/Brasil'), (b'108', '108 - Brunei'), (b'111', '111 - Bulgaria, Republica Da'), (b'115', '115 - Burundi'), (b'119', '119 - Butao'), (b'127', '127 - Cabo Verde, Republica De'), (b'131', '131 - Cachemira'), (b'137', '137 - Cayman, Ilhas'), (b'141', '141 - Camboja'), (b'145', '145 - Camaroes'), (b'149', '149 - Canada'), (b'150', '150 - Jersey, Ilha Do Canal'), (b'151', '151 - Canarias, Ilhas'), (b'152', '152 - Canal,Ilhas'), (b'153', '153 - Cazaquistao, Republica Do'), (b'154', '154 - Catar'), (b'158', '158 - Chile'), (b'160', '160 - China, Republica Popular'), (b'161', '161 - Formosa (TAIWAN)'), (b'163', '163 - Chipre'), (b'165', '165 - Cocos(Keeling),Ilhas'), (b'169', '169 - Colombia'), (b'173', '173 - Comores, Ilhas'), (b'177', '177 - Congo'), (b'183', '183 - Cook, Ilhas'), (b'187', '187 - Coreia (DO Norte), Rep.Pop.Democratica'), (b'190', '190 - Coreia (DO Sul), Republica Da'), (b'193', '193 - Costa Do Marfim'), (b'195', '195 - Croacia (REPUBLICA Da)'), (b'196', '196 - Costa Rica'), (b'198', '198 - Coveite'), (b'199', '199 - Cuba'), (b'229', '229 - Benin'), (b'232', '232 - Dinamarca'), (b'235', '235 - Dominica,Ilha'), (b'237', '237 - Dubai'), (b'239', '239 - Equador'), (b'240', '240 - Egito'), (b'243', '243 - Eritreia'), (b'244', '244 - Emirados Arabes Unidos'), (b'245', '245 - Espanha'), (b'246', '246 - Eslovenia, Republica Da'), (b'247', '247 - Eslovaca, Republica'), (b'249', '249 - Estados Unidos'), (b'251', '251 - Estonia, Republica Da'), (b'253', '253 - Etiopia'), (b'255', '255 - Falkland (ILHAS Malvinas)'), (b'259', '259 - Feroe, Ilhas'), (b'263', '263 - Fezzan'), (b'267', '267 - Filipinas'), (b'271', '271 - Finlandia'), (b'275', '275 - Franca'), (b'281', '281 - Gabao'), (b'285', '285 - Gambia'), (b'289', '289 - Gana'), (b'291', '291 - Georgia, Republica Da'), (b'293', '293 - Gibraltar'), (b'297', '297 - Granada'), (b'301', '301 - Grecia'), (b'305', '305 - Groenlandia'), (b'309', '309 - Guadalupe'), (b'313', '313 - Guam'), (b'317', '317 - Guatemala'), (b'325', '325 - Guiana Francesa'), (b'329', '329 - Guine'), (b'331', '331 - Guine-Equatorial'), (b'334', '334 - Guine-Bissau'), (b'337', '337 - Guiana'), (b'341', '341 - Haiti'), (b'345', '345 - Honduras'), (b'351', '351 - Hong Kong'), (b'355', '355 - Hungria, Republica Da'), (b'357', '357 - Iemen'), (b'358', '358 - Iemem Do Sul'), (b'359', '359 - Man, Ilha De'), (b'361', '361 - India'), (b'365', '365 - Indonesia'), (b'367', '367 - Inglaterra'), (b'369', '369 - Iraque'), (b'372', '372 - Ira, Republica Islamica Do'), (b'375', '375 - Irlanda'), (b'379', '379 - Islandia'), (b'383', '383 - Israel'), (b'386', '386 - Italia'), (b'388', '388 - Servia E Montenegro'), (b'391', '391 - Jamaica'), (b'395', '395 - Jammu'), (b'396', '396 - Johnston, Ilhas'), (b'399', '399 - Japao'), (b'403', '403 - Jordania'), (b'411', '411 - Kiribati'), (b'420', '420 - Laos, Rep.Pop.Democr.Do'), (b'423', '423 - Lebuan,Ilhas'), (b'426', '426 - Lesoto'), (b'427', '427 - Letonia, Republica Da'), (b'431', '431 - Libano'), (b'434', '434 - Liberia'), (b'438', '438 - Libia'), (b'440', '440 - Liechtenstein'), (b'442', '442 - Lituania, Republica Da'), (b'445', '445 - Luxemburgo'), (b'447', '447 - Macau'), (b'449', '449 - Macedonia, Ant.Rep.Iugoslava'), (b'450', '450 - Madagascar'), (b'452', '452 - Ilha Da Madeira'), (b'455', '455 - Malasia'), (b'458', '458 - Malavi'), (b'461', '461 - Maldivas'), (b'464', '464 - Mali'), (b'467', '467 - Malta'), (b'472', '472 - Marianas Do Norte'), (b'474', '474 - Marrocos'), (b'476', '476 - Marshall,Ilhas'), (b'477', '477 - Martinica'), (b'485', '485 - Mauricio'), (b'488', '488 - Mauritania'), (b'490', '490 - Midway, Ilhas'), (b'493', '493 - Mexico'), (b'494', '494 - Moldavia, Republica Da'), (b'495', '495 - Monaco'), (b'497', '497 - Mongolia'), (b'499', '499 - Micronesia'), (b'501', '501 - Montserrat,Ilhas'), (b'505', '505 - Mocambique'), (b'507', '507 - Namibia'), (b'508', '508 - Nauru'), (b'511', '511 - Christmas,Ilha (NAVIDAD)'), (b'517', '517 - Nepal'), (b'521', '521 - Nicaragua'), (b'525', '525 - Niger'), (b'528', '528 - Nigeria'), (b'531', '531 - Niue,Ilha'), (b'535', '535 - Norfolk,Ilha'), (b'538', '538 - Noruega'), (b'542', '542 - Nova Caledonia'), (b'545', '545 - Papua Nova Guine'), (b'548', '548 - Nova Zelandia'), (b'551', '551 - Vanuatu'), (b'556', '556 - Oma'), (b'563', '563 - Pacifico,Ilhas Do (ADMINISTRACAO Dos Eua)'), (b'566', '566 - Pacifico,Ilhas Do (POSSESSAO Dos Eua)'), (b'569', '569 - Pacifico,Ilhas Do (TERRITORIO Em Fideicomisso Dos'), (b'573', '573 - Paises Baixos (HOLANDA)'), (b'575', '575 - Palau'), (b'576', '576 - Paquistao'), (b'578', '578 - Palestina'), (b'580', '580 - Panama'), (b'583', '583 - Papua Nova Guin\xe9'), (b'586', '586 - Paraguai'), (b'589', '589 - Peru'), (b'593', '593 - Pitcairn,Ilha'), (b'599', '599 - Polinesia Francesa'), (b'603', '603 - Polonia, Republica Da'), (b'607', '607 - Portugal'), (b'611', '611 - Porto Rico'), (b'623', '623 - Quenia'), (b'625', '625 - Quirguiz, Republica'), (b'628', '628 - Reino Unido'), (b'640', '640 - Republica Centro-Africana'), (b'647', '647 - Republica Dominicana'), (b'660', '660 - Reuniao, Ilha'), (b'665', '665 - Zimbabue'), (b'670', '670 - Romenia'), (b'675', '675 - Ruanda'), (b'676', '676 - Russia, Federacao Da'), (b'677', '677 - Salomao, Ilhas'), (b'678', '678 - Saint Kitts E Nevis'), (b'685', '685 - Saara Ocidental'), (b'687', '687 - El Salvador'), (b'690', '690 - Samoa'), (b'691', '691 - Samoa Americana'), (b'695', '695 - Sao Cristovao E Neves,Ilhas'), (b'697', '697 - San Marino'), (b'700', '700 - Sao Pedro E Miquelon'), (b'705', '705 - Sao Vicente E Granadinas'), (b'710', '710 - Santa Helena'), (b'715', '715 - Santa Lucia'), (b'720', '720 - Sao Tome E Principe, Ilhas'), (b'728', '728 - Senegal'), (b'731', '731 - Seychelles'), (b'735', '735 - Serra Leoa'), (b'738', '738 - Sikkim'), (b'741', '741 - Cingapura'), (b'744', '744 - Siria, Republica Arabe Da'), (b'748', '748 - Somalia'), (b'750', '750 - Sri Lanka'), (b'754', '754 - Suazilandia'), (b'756', '756 - Africa Do Sul'), (b'759', '759 - Sudao'), (b'764', '764 - Suecia'), (b'767', '767 - Suica'), (b'770', '770 - Suriname'), (b'772', '772 - Tadjiquistao, Republica Do'), (b'776', '776 - Tailandia'), (b'780', '780 - Tanzania, Rep.Unida Da'), (b'782', '782 - Territorio Brit.Oc.Indico'), (b'783', '783 - Djibuti'), (b'785', '785 - Territorio da Alta Comissao do Pacifico Ocidental'), (b'788', '788 - Chade'), (b'790', '790 - Tchecoslovaquia'), (b'791', '791 - Tcheca, Republica'), (b'795', '795 - Timor Leste'), (b'800', '800 - Togo'), (b'805', '805 - Toquelau,Ilhas'), (b'810', '810 - Tonga'), (b'815', '815 - Trinidad E Tobago'), (b'820', '820 - Tunisia'), (b'823', '823 - Turcas E Caicos,Ilhas'), (b'824', '824 - Turcomenistao, Republica Do'), (b'827', '827 - Turquia'), (b'828', '828 - Tuvalu'), (b'831', '831 - Ucrania'), (b'833', '833 - Uganda'), (b'840', '840 - Uniao Das Republicas Socialistas Sovieticas'), (b'845', '845 - Uruguai'), (b'847', '847 - Uzbequistao, Republica Do'), (b'848', '848 - Vaticano, Est.Da Cidade Do'), (b'850', '850 - Venezuela'), (b'855', '855 - Vietname Norte'), (b'858', '858 - Vietna'), (b'863', '863 - Virgens,Ilhas (BRITANICAS)'), (b'866', '866 - Virgens,Ilhas (E.U.A.)'), (b'870', '870 - Fiji'), (b'873', '873 - Wake, Ilha'), (b'875', '875 - Wallis E Futuna, Ilhas'), (b'888', '888 - Congo, Republica Democratica Do'), (b'890', '890 - Zambia')])),
                ('paisnac', models.CharField(max_length=3, choices=[(b'008', '008 - Abu Dhabi'), (b'009', '009 - Dirce'), (b'013', '013 - Afeganistao'), (b'017', '017 - Albania, Republica Da'), (b'020', '020 - Alboran-Perejil,Ilhas'), (b'023', '023 - Alemanha'), (b'025', '025 - Alemanha, Republica Democratica'), (b'031', '031 - Burkina Faso'), (b'037', '037 - Andorra'), (b'040', '040 - Angola'), (b'041', '041 - Anguilla'), (b'043', '043 - Antigua E Barbuda'), (b'047', '047 - Antilhas Holandesas'), (b'053', '053 - Arabia Saudita'), (b'059', '059 - Argelia'), (b'063', '063 - Argentina'), (b'064', '064 - Armenia, Republica Da'), (b'065', '065 - Aruba'), (b'069', '069 - Australia'), (b'072', '072 - Austria'), (b'073', '073 - Azerbaijao, Republica Do'), (b'077', '077 - Bahamas, Ilhas'), (b'080', '080 - Bahrein, Ilhas'), (b'081', '081 - Bangladesh'), (b'083', '083 - Barbados'), (b'085', '085 - Belarus, Republica Da'), (b'087', '087 - Belgica'), (b'088', '088 - Belize'), (b'090', '090 - Bermudas'), (b'093', '093 - Mianmar (BIRMANIA)'), (b'097', '097 - Bolivia, Estado Plurinacional Da'), (b'098', '098 - Bosnia-Herzegovina (REPUBLICA Da)'), (b'100', '100 - Int.Z.F.Manaus'), (b'101', '101 - Botsuana'), (b'105', '105 - Brasil'), (b'106', '106 - Fretado P/Brasil'), (b'108', '108 - Brunei'), (b'111', '111 - Bulgaria, Republica Da'), (b'115', '115 - Burundi'), (b'119', '119 - Butao'), (b'127', '127 - Cabo Verde, Republica De'), (b'131', '131 - Cachemira'), (b'137', '137 - Cayman, Ilhas'), (b'141', '141 - Camboja'), (b'145', '145 - Camaroes'), (b'149', '149 - Canada'), (b'150', '150 - Jersey, Ilha Do Canal'), (b'151', '151 - Canarias, Ilhas'), (b'152', '152 - Canal,Ilhas'), (b'153', '153 - Cazaquistao, Republica Do'), (b'154', '154 - Catar'), (b'158', '158 - Chile'), (b'160', '160 - China, Republica Popular'), (b'161', '161 - Formosa (TAIWAN)'), (b'163', '163 - Chipre'), (b'165', '165 - Cocos(Keeling),Ilhas'), (b'169', '169 - Colombia'), (b'173', '173 - Comores, Ilhas'), (b'177', '177 - Congo'), (b'183', '183 - Cook, Ilhas'), (b'187', '187 - Coreia (DO Norte), Rep.Pop.Democratica'), (b'190', '190 - Coreia (DO Sul), Republica Da'), (b'193', '193 - Costa Do Marfim'), (b'195', '195 - Croacia (REPUBLICA Da)'), (b'196', '196 - Costa Rica'), (b'198', '198 - Coveite'), (b'199', '199 - Cuba'), (b'229', '229 - Benin'), (b'232', '232 - Dinamarca'), (b'235', '235 - Dominica,Ilha'), (b'237', '237 - Dubai'), (b'239', '239 - Equador'), (b'240', '240 - Egito'), (b'243', '243 - Eritreia'), (b'244', '244 - Emirados Arabes Unidos'), (b'245', '245 - Espanha'), (b'246', '246 - Eslovenia, Republica Da'), (b'247', '247 - Eslovaca, Republica'), (b'249', '249 - Estados Unidos'), (b'251', '251 - Estonia, Republica Da'), (b'253', '253 - Etiopia'), (b'255', '255 - Falkland (ILHAS Malvinas)'), (b'259', '259 - Feroe, Ilhas'), (b'263', '263 - Fezzan'), (b'267', '267 - Filipinas'), (b'271', '271 - Finlandia'), (b'275', '275 - Franca'), (b'281', '281 - Gabao'), (b'285', '285 - Gambia'), (b'289', '289 - Gana'), (b'291', '291 - Georgia, Republica Da'), (b'293', '293 - Gibraltar'), (b'297', '297 - Granada'), (b'301', '301 - Grecia'), (b'305', '305 - Groenlandia'), (b'309', '309 - Guadalupe'), (b'313', '313 - Guam'), (b'317', '317 - Guatemala'), (b'325', '325 - Guiana Francesa'), (b'329', '329 - Guine'), (b'331', '331 - Guine-Equatorial'), (b'334', '334 - Guine-Bissau'), (b'337', '337 - Guiana'), (b'341', '341 - Haiti'), (b'345', '345 - Honduras'), (b'351', '351 - Hong Kong'), (b'355', '355 - Hungria, Republica Da'), (b'357', '357 - Iemen'), (b'358', '358 - Iemem Do Sul'), (b'359', '359 - Man, Ilha De'), (b'361', '361 - India'), (b'365', '365 - Indonesia'), (b'367', '367 - Inglaterra'), (b'369', '369 - Iraque'), (b'372', '372 - Ira, Republica Islamica Do'), (b'375', '375 - Irlanda'), (b'379', '379 - Islandia'), (b'383', '383 - Israel'), (b'386', '386 - Italia'), (b'388', '388 - Servia E Montenegro'), (b'391', '391 - Jamaica'), (b'395', '395 - Jammu'), (b'396', '396 - Johnston, Ilhas'), (b'399', '399 - Japao'), (b'403', '403 - Jordania'), (b'411', '411 - Kiribati'), (b'420', '420 - Laos, Rep.Pop.Democr.Do'), (b'423', '423 - Lebuan,Ilhas'), (b'426', '426 - Lesoto'), (b'427', '427 - Letonia, Republica Da'), (b'431', '431 - Libano'), (b'434', '434 - Liberia'), (b'438', '438 - Libia'), (b'440', '440 - Liechtenstein'), (b'442', '442 - Lituania, Republica Da'), (b'445', '445 - Luxemburgo'), (b'447', '447 - Macau'), (b'449', '449 - Macedonia, Ant.Rep.Iugoslava'), (b'450', '450 - Madagascar'), (b'452', '452 - Ilha Da Madeira'), (b'455', '455 - Malasia'), (b'458', '458 - Malavi'), (b'461', '461 - Maldivas'), (b'464', '464 - Mali'), (b'467', '467 - Malta'), (b'472', '472 - Marianas Do Norte'), (b'474', '474 - Marrocos'), (b'476', '476 - Marshall,Ilhas'), (b'477', '477 - Martinica'), (b'485', '485 - Mauricio'), (b'488', '488 - Mauritania'), (b'490', '490 - Midway, Ilhas'), (b'493', '493 - Mexico'), (b'494', '494 - Moldavia, Republica Da'), (b'495', '495 - Monaco'), (b'497', '497 - Mongolia'), (b'499', '499 - Micronesia'), (b'501', '501 - Montserrat,Ilhas'), (b'505', '505 - Mocambique'), (b'507', '507 - Namibia'), (b'508', '508 - Nauru'), (b'511', '511 - Christmas,Ilha (NAVIDAD)'), (b'517', '517 - Nepal'), (b'521', '521 - Nicaragua'), (b'525', '525 - Niger'), (b'528', '528 - Nigeria'), (b'531', '531 - Niue,Ilha'), (b'535', '535 - Norfolk,Ilha'), (b'538', '538 - Noruega'), (b'542', '542 - Nova Caledonia'), (b'545', '545 - Papua Nova Guine'), (b'548', '548 - Nova Zelandia'), (b'551', '551 - Vanuatu'), (b'556', '556 - Oma'), (b'563', '563 - Pacifico,Ilhas Do (ADMINISTRACAO Dos Eua)'), (b'566', '566 - Pacifico,Ilhas Do (POSSESSAO Dos Eua)'), (b'569', '569 - Pacifico,Ilhas Do (TERRITORIO Em Fideicomisso Dos'), (b'573', '573 - Paises Baixos (HOLANDA)'), (b'575', '575 - Palau'), (b'576', '576 - Paquistao'), (b'578', '578 - Palestina'), (b'580', '580 - Panama'), (b'583', '583 - Papua Nova Guin\xe9'), (b'586', '586 - Paraguai'), (b'589', '589 - Peru'), (b'593', '593 - Pitcairn,Ilha'), (b'599', '599 - Polinesia Francesa'), (b'603', '603 - Polonia, Republica Da'), (b'607', '607 - Portugal'), (b'611', '611 - Porto Rico'), (b'623', '623 - Quenia'), (b'625', '625 - Quirguiz, Republica'), (b'628', '628 - Reino Unido'), (b'640', '640 - Republica Centro-Africana'), (b'647', '647 - Republica Dominicana'), (b'660', '660 - Reuniao, Ilha'), (b'665', '665 - Zimbabue'), (b'670', '670 - Romenia'), (b'675', '675 - Ruanda'), (b'676', '676 - Russia, Federacao Da'), (b'677', '677 - Salomao, Ilhas'), (b'678', '678 - Saint Kitts E Nevis'), (b'685', '685 - Saara Ocidental'), (b'687', '687 - El Salvador'), (b'690', '690 - Samoa'), (b'691', '691 - Samoa Americana'), (b'695', '695 - Sao Cristovao E Neves,Ilhas'), (b'697', '697 - San Marino'), (b'700', '700 - Sao Pedro E Miquelon'), (b'705', '705 - Sao Vicente E Granadinas'), (b'710', '710 - Santa Helena'), (b'715', '715 - Santa Lucia'), (b'720', '720 - Sao Tome E Principe, Ilhas'), (b'728', '728 - Senegal'), (b'731', '731 - Seychelles'), (b'735', '735 - Serra Leoa'), (b'738', '738 - Sikkim'), (b'741', '741 - Cingapura'), (b'744', '744 - Siria, Republica Arabe Da'), (b'748', '748 - Somalia'), (b'750', '750 - Sri Lanka'), (b'754', '754 - Suazilandia'), (b'756', '756 - Africa Do Sul'), (b'759', '759 - Sudao'), (b'764', '764 - Suecia'), (b'767', '767 - Suica'), (b'770', '770 - Suriname'), (b'772', '772 - Tadjiquistao, Republica Do'), (b'776', '776 - Tailandia'), (b'780', '780 - Tanzania, Rep.Unida Da'), (b'782', '782 - Territorio Brit.Oc.Indico'), (b'783', '783 - Djibuti'), (b'785', '785 - Territorio da Alta Comissao do Pacifico Ocidental'), (b'788', '788 - Chade'), (b'790', '790 - Tchecoslovaquia'), (b'791', '791 - Tcheca, Republica'), (b'795', '795 - Timor Leste'), (b'800', '800 - Togo'), (b'805', '805 - Toquelau,Ilhas'), (b'810', '810 - Tonga'), (b'815', '815 - Trinidad E Tobago'), (b'820', '820 - Tunisia'), (b'823', '823 - Turcas E Caicos,Ilhas'), (b'824', '824 - Turcomenistao, Republica Do'), (b'827', '827 - Turquia'), (b'828', '828 - Tuvalu'), (b'831', '831 - Ucrania'), (b'833', '833 - Uganda'), (b'840', '840 - Uniao Das Republicas Socialistas Sovieticas'), (b'845', '845 - Uruguai'), (b'847', '847 - Uzbequistao, Republica Do'), (b'848', '848 - Vaticano, Est.Da Cidade Do'), (b'850', '850 - Venezuela'), (b'855', '855 - Vietname Norte'), (b'858', '858 - Vietna'), (b'863', '863 - Virgens,Ilhas (BRITANICAS)'), (b'866', '866 - Virgens,Ilhas (E.U.A.)'), (b'870', '870 - Fiji'), (b'873', '873 - Wake, Ilha'), (b'875', '875 - Wallis E Futuna, Ilhas'), (b'888', '888 - Congo, Republica Democratica Do'), (b'890', '890 - Zambia')])),
                ('nmmae', models.CharField(max_length=70, null=True, blank=True)),
                ('nmpai', models.CharField(max_length=70, null=True, blank=True)),
                ('tpplanrp', models.IntegerField(choices=[(1, '1 - Plano previdenci\xe1rio ou \xfanico'), (2, '2 - Plano financeiro')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('operacao', models.IntegerField(choices=[(1, 'Incluir'), (2, 'Alterar'), (3, 'Excluir')])),
                ('criado_por', models.ForeignKey(related_name='s2400evtcdbenprrp_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s2400evtcdbenprrp_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s2400evtcdbenprrp_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s2400evtcdbenprrp_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indretif', 'nrrecibo', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'cpfbenef', 'nmbenefic', 'dtnascto', 'codmunic', 'uf', 'paisnascto', 'paisnac', 'nmmae', 'nmpai', 'tpplanrp'],
                'db_table': 's2400_evtcdbenprrp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s3000evtExclusao',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('tpamb', models.IntegerField(choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('procemi', models.IntegerField(default=1, choices=[(1, '1 - Aplicativo do empregador'), (2, '2 - Aplicativo governamental - Empregador Dom\xe9stico'), (3, '3 - Aplicativo governamental - Web Geral'), (4, '4 - Aplicativo governamental - Microempreendedor Individual(MEI)'), (5, '5 - Aplicativo governamental - Segurado Especial')])),
                ('verproc', models.CharField(max_length=20)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('tpevento', models.CharField(max_length=6, choices=[(b'S-1000', 'S-1000 - Informa\xe7\xf5es do Empregador/Contribuinte/\xd3rg\xe3o P\xfablico'), (b'S-1005', 'S-1005 - Tabela de Estabelecimentos, Obras de Constru\xe7\xe3o Civil ou Unidades de \xd3rg\xe3os P\xfablicos'), (b'S-1010', 'S-1010 - Tabela de Rubricas'), (b'S-1020', 'S-1020 - Tabela de Lota\xe7\xf5es Tribut\xe1rias'), (b'S-1030', 'S-1030 - Tabela de Cargos/Empregos P\xfablicos'), (b'S-1035', 'S-1035 - Tabela de Carreiras P\xfablicas'), (b'S-1040', 'S-1040 - Tabela de Fun\xe7\xf5es/Cargos em Comiss\xe3o'), (b'S-1050', 'S-1050 - Tabela de Hor\xe1rios/Turnos de Trabalho'), (b'S-1060', 'S-1060 - Tabela de Ambientes de Trabalho'), (b'S-1070', 'S-1070 - Tabela de Processos Administrativos/Judiciais'), (b'S-1080', 'S-1080 - Tabela de Operadores Portu\xe1rios'), (b'S-1200', 'S-1200 - Remunera\xe7\xe3o do Trabalhador vinculado ao Regime Geral de Previd\xeancia Social - RGPS'), (b'S-1202', 'S-1202 - Remunera\xe7\xe3o do Trabalhador vinculado a Regime Pr\xf3prio de Previd\xeancia Social - RPPS'), (b'S-1207', 'S-1207 - Benef\xedcios Previdenci\xe1rios - RPPS'), (b'S-1210', 'S-1210 - Pagamentos de Rendimentos do Trabalho'), (b'S-1250', 'S-1250 - Aquisi\xe7\xe3o de Produ\xe7\xe3o Rural'), (b'S-1260', 'S-1260 - Comercializa\xe7\xe3o da Produ\xe7\xe3o Rural Pessoa F\xedsica'), (b'S-1270', 'S-1270 - Contrata\xe7\xe3o de Trabalhadores Avulsos N\xe3o Portu\xe1rios'), (b'S-1280', 'S-1280 - Informa\xe7\xf5es Complementares aos Eventos Peri\xf3dicos'), (b'S-1295', 'S-1295 - Solicita\xe7\xe3o de Totaliza\xe7\xe3o para Pagamento em Conting\xeancia'), (b'S-1298', 'S-1298 - Reabertura dos Eventos Peri\xf3dicos'), (b'S-1299', 'S-1299 - Fechamento dos Eventos Peri\xf3dicos'), (b'S-1300', 'S-1300 - Contribui\xe7\xe3o Sindical Patronal'), (b'S-2190', 'S-2190 - Admiss\xe3o de Trabalhador - Registro Preliminar'), (b'S-2200', 'S-2200 - Admiss\xe3o / Ingresso de Trabalhador'), (b'S-2205', 'S-2205 - Altera\xe7\xe3o de Dados Cadastrais do Trabalhador'), (b'S-2206', 'S-2206 - Altera\xe7\xe3o de Contrato de Trabalho'), (b'S-2210', 'S-2210 - Comunica\xe7\xe3o de Acidente de Trabalho'), (b'S-2220', 'S-2220 - Monitoramento da sa\xfade do trabalhador'), (b'S-2230', 'S-2230 - Afastamento Tempor\xe1rio'), (b'S-2240', 'S-2240 - Condi\xe7\xf5es Ambientais do Trabalho - Fatores de Risco'), (b'S-2241', 'S-2241 - Insalubridade/Periculosidade/Aposentadoria Especial'), (b'S-2250', 'S-2250 - Aviso Pr\xe9vio'), (b'S-2260', 'S-2260 - Convoca\xe7\xe3o para Trabalho Intermitente'), (b'S-2298', 'S-2298 - Reintegra\xe7\xe3o'), (b'S-2299', 'S-2299 - Desligamento'), (b'S-2300', 'S-2300 - Trabalhador Sem V\xednculo de Emprego/Estatut\xe1rio - In\xedcio'), (b'S-2306', 'S-2306 - Trabalhador Sem V\xednculo de Emprego/Estatut\xe1rio - Altera\xe7\xe3o Contratual'), (b'S-2399', 'S-2399 - Trabalhador Sem V\xednculo de Emprego/Estatut\xe1rio - T\xe9rmino'), (b'S-2400', 'S-2400 - Cadastro de Beneficios Previdenci\xe1rios - RPPS'), (b'S-3000', 'S-3000 - Exclus\xe3o de Eventos'), (b'S-5001', 'S-5001 - Informa\xe7\xf5es das contribui\xe7\xf5es sociais por Trabalhador'), (b'S-5002', 'S-5002 - Imposto de Renda Retido na Fonte por Trabalhador'), (b'S-5011', 'S-5011 - Informa\xe7\xf5es das contribui\xe7\xf5es sociais consolidadas por contribuinte'), (b'S-5012', 'S-5012 - Informa\xe7\xf5es do IRRF consolidadas por Contribuinte')])),
                ('nrrecevt', models.CharField(max_length=40)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s3000evtexclusao_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s3000evtexclusao_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s3000evtexclusao_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s3000evtexclusao_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'tpamb', 'procemi', 'verproc', 'tpinsc', 'nrinsc', 'tpevento', 'nrrecevt'],
                'db_table': 's3000_evtexclusao',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s5001evtBasesTrab',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('nrrecarqbase', models.CharField(max_length=40, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s5001evtbasestrab_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s5001evtbasestrab_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s5001evtbasestrab_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s5001evtbasestrab_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'nrrecarqbase', 'indapuracao', 'perapur', 'tpinsc', 'nrinsc', 'cpftrab'],
                'db_table': 's5001_evtbasestrab',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s5002evtIrrfBenef',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('nrrecarqbase', models.CharField(max_length=40, null=True, blank=True)),
                ('perapur', models.CharField(max_length=7)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('cpftrab', models.CharField(max_length=11)),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s5002evtirrfbenef_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s5002evtirrfbenef_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s5002evtirrfbenef_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s5002evtirrfbenef_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'nrrecarqbase', 'perapur', 'tpinsc', 'nrinsc', 'cpftrab'],
                'db_table': 's5002_evtirrfbenef',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s5011evtCS',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('indapuracao', models.IntegerField(choices=[(1, '1 - Mensal'), (2, '2 - Anual (13\xb0 sal\xe1rio)')])),
                ('perapur', models.CharField(max_length=7)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (1, '1 - CNPJ'), (2, '2 - CPF'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('nrrecarqbase', models.CharField(max_length=40, null=True, blank=True)),
                ('indexistinfo', models.IntegerField(choices=[(1, '1 - H\xe1 informa\xe7\xf5es com apura\xe7\xe3o de contribui\xe7\xf5es sociais'), (2, '2 - H\xe1 movimento por\xe9m sem apura\xe7\xe3o de contribui\xe7\xf5es sociais'), (3, '3 - N\xe3o h\xe1 movimento no per\xedodo informado em {perApur}.')])),
                ('classtrib', models.CharField(max_length=2, choices=[(b'01', '01 - Empresa enquadrada no regime de tributa\xe7\xe3o Simples Nacional com tributa\xe7\xe3o previdenci\xe1ria substitu\xedda'), (b'02', '02 - Empresa enquadrada no regime de tributa\xe7\xe3o Simples Nacional com tributa\xe7\xe3o previdenci\xe1ria n\xe3o substitu\xedda'), (b'03', '03 - Empresa enquadrada no regime de tributa\xe7\xe3o Simples Nacional com tributa\xe7\xe3o previdenci\xe1ria substitu\xedda e n\xe3o substitu\xedda'), (b'04', '04 - MEI - Micro Empreendedor Individual'), (b'06', '06 - Agroind\xfastria'), (b'07', '07 - Produtor Rural Pessoa Jur\xeddica'), (b'08', '08 - Cons\xf3rcio Simplificado de Produtores Rurais'), (b'09', '09 - \xd3rg\xe3o Gestor de M\xe3o de Obra'), (b'10', '10 - Entidade Sindical a que se refere a Lei 12.023/2009'), (b'11', '11 - Associa\xe7\xe3o Desportiva que mant\xe9m Clube de Futebol Profissional'), (b'13', '13 - Banco, caixa econ\xf4mica, sociedade de cr\xe9dito, financiamento e investimento e demais empresas relacionadas no par\xe1grafo 1\xba do art. 22 da Lei 8.212./91'), (b'14', '14 - Sindicatos em geral, exceto aquele classificado no c\xf3digo [10]'), (b'21', '21 - Pessoa F\xedsica, exceto Segurado Especial'), (b'22', '22 - Segurado Especial'), (b'60', '60 - Miss\xe3o Diplom\xe1tica ou Reparti\xe7\xe3o Consular de carreira estrangeira'), (b'70', '70 - Empresa de que trata o Decreto 5.436/2005'), (b'80', '80 - Entidade Beneficente de Assist\xeancia Social isenta de contribui\xe7\xf5es sociais'), (b'85', '85 - Ente Federativo, \xd3rg\xe3os da Uni\xe3o, Autarquias e Funda\xe7\xf5es P\xfablicas'), (b'99', '99 - Pessoas Jur\xeddicas em Geral')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s5011evtcs_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s5011evtcs_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s5011evtcs_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s5011evtcs_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'indapuracao', 'perapur', 'tpinsc', 'nrinsc', 'nrrecarqbase', 'indexistinfo', 'classtrib'],
                'db_table': 's5011_evtcs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='s5012evtIrrf',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('versao', models.CharField(default=b'v02_04_02', max_length=20, choices=[(b'v02_04_02', 'Vers\xe3o 2.04.02')])),
                ('identidade', models.CharField(max_length=36, null=True, blank=True)),
                ('perapur', models.CharField(max_length=7)),
                ('tpinsc', models.IntegerField(choices=[(1, '1 - CNPJ'), (2, '2 - CPF'), (3, '3 - CAEPF (Cadastro de Atividade Econ\xf4mica de Pessoa F\xedsica)'), (4, '4 - CNO (Cadastro Nacional de Obra)')])),
                ('nrinsc', models.CharField(max_length=15)),
                ('nrrecarqbase', models.CharField(max_length=40, null=True, blank=True)),
                ('indexistinfo', models.IntegerField(choices=[(1, '1 - H\xe1 informa\xe7\xf5es de Imposto de Renda Retido na Fonte'), (2, '2 - H\xe1 movimento, por\xe9m n\xe3o h\xe1 informa\xe7\xf5es de Imposto de Renda Retido na Fonte'), (3, '3 - N\xe3o h\xe1 movimento no per\xedodo informado em {perApur}.')])),
                ('criado_em', models.DateTimeField(blank=True)),
                ('modificado_em', models.DateTimeField(null=True, blank=True)),
                ('excluido', models.BooleanField()),
                ('arquivo', models.CharField(max_length=200, null=True, blank=True)),
                ('arquivo_original', models.IntegerField(default=0, null=True, blank=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('validacoes', models.TextField(null=True, blank=True)),
                ('validacao_precedencia', models.IntegerField(blank=True, null=True, choices=[(0, 'N\xe3o'), (1, 'Sim')])),
                ('ocorrencias', models.TextField(null=True, blank=True)),
                ('status', models.IntegerField(default=0, choices=[(0, 'Cadastrado'), (1, 'Importado'), (10, 'Assinado'), (11, 'Gerado'), (12, 'Retorno'), (13, 'Erro - Ocorr\xeancias'), (14, 'Processado'), (2, 'Duplicado'), (3, 'Erro na valida\xe7\xe3o'), (4, 'Validado'), (5, 'Erro no envio'), (6, 'Aguardando envio'), (7, 'Enviado'), (8, 'Erro na consulta'), (9, 'Consultado')])),
                ('recepcao_tp_amb', models.IntegerField(blank=True, null=True, choices=[(1, '1 - Produ\xe7\xe3o'), (2, '2 - Produ\xe7\xe3o restrita')])),
                ('recepcao_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recepcao_versao_app', models.CharField(max_length=30, null=True, blank=True)),
                ('recepcao_protocolo_envio_lote', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_codigo_resposta', models.IntegerField(blank=True, null=True, choices=[(0, 'Cadastrado'), (101, '101 - Lote Aguardando Processamento'), (201, '201 - Lote Processado com Sucesso'), (202, '202 - Lote Processado com Advert\xeancias'), (301, '301 - Erro Servidor eSocial'), (401, '401 - Lote Incorreto - Erro preenchimento'), (402, '402 - Lote Incorreto - schema Inv\xe1lido'), (403, '403 - Lote Incorreto - Vers\xe3o do Schema n\xe3o permitida'), (404, '404 - Lote Incorreto - Erro Certificado'), (405, '405 - Lote Incorreto - Lote nulo ou vazio'), (501, '501 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Preenchimento'), (502, '502 - Solicita\xe7\xe3o de Consulta Incorreta - Schema Inv\xe1lido.'), (503, '503 - Solicita\xe7\xe3o de Consulta Incorreta - Vers\xe3o do Schema N\xe3o Permitida.'), (504, '504 - Solicita\xe7\xe3o de Consulta Incorreta - Erro Certificado.'), (505, '505 - Solicita\xe7\xe3o de Consulta Incorreta - Consulta nula ou vazia.')])),
                ('processamento_descricao_resposta', models.TextField(null=True, blank=True)),
                ('processamento_versao_app_processamento', models.CharField(max_length=30, null=True, blank=True)),
                ('processamento_data_hora', models.DateTimeField(null=True, blank=True)),
                ('recibo_numero', models.CharField(max_length=100, null=True, blank=True)),
                ('recibo_hash', models.CharField(max_length=100, null=True, blank=True)),
                ('criado_por', models.ForeignKey(related_name='s5012evtirrf_criado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('modificado_por', models.ForeignKey(related_name='s5012evtirrf_modificado_por', blank=True, to='controle_de_acesso.Usuarios', null=True)),
                ('retornos_eventos', models.ForeignKey(related_name='s5012evtirrf_retornos_eventos', blank=True, to='mensageiro.RetornosEventos', null=True)),
                ('transmissor_lote_esocial', models.ForeignKey(related_name='s5012evtirrf_transmissor_lote_esocial', blank=True, to='mensageiro.TransmissorLoteEsocial', null=True)),
            ],
            options={
                'ordering': ['identidade', 'perapur', 'tpinsc', 'nrinsc', 'nrrecarqbase', 'indexistinfo'],
                'db_table': 's5012_evtirrf',
                'managed': True,
            },
        ),
    ]
